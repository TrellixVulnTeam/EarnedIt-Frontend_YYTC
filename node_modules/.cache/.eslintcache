[{"/Users/onesmusnyakotyo/earnedit/frontend/src/index.js":"1","/Users/onesmusnyakotyo/earnedit/frontend/src/reportWebVitals.js":"2","/Users/onesmusnyakotyo/earnedit/frontend/src/App.js":"3","/Users/onesmusnyakotyo/earnedit/frontend/src/components/SendCostModal.js":"4","/Users/onesmusnyakotyo/earnedit/frontend/src/components/Footer.js":"5","/Users/onesmusnyakotyo/earnedit/frontend/src/components/Header.js":"6","/Users/onesmusnyakotyo/earnedit/frontend/src/screens/HomeScreen.js":"7","/Users/onesmusnyakotyo/earnedit/frontend/src/screens/SendForm.js":"8","/Users/onesmusnyakotyo/earnedit/frontend/src/screens/RecepientScreen.js":"9","/Users/onesmusnyakotyo/earnedit/frontend/src/screens/CollectionMethod.js":"10","/Users/onesmusnyakotyo/earnedit/frontend/src/components/CountrySelector.js":"11","/Users/onesmusnyakotyo/earnedit/frontend/src/components/Process.js":"12","/Users/onesmusnyakotyo/earnedit/frontend/src/components/CurrencyConverter.js":"13","/Users/onesmusnyakotyo/earnedit/frontend/src/components/HomeCarousel.js":"14","/Users/onesmusnyakotyo/earnedit/frontend/src/components/CurrencyDisplay.js":"15","/Users/onesmusnyakotyo/earnedit/frontend/src/store.js":"16","/Users/onesmusnyakotyo/earnedit/frontend/src/reducers/userReducers.js":"17","/Users/onesmusnyakotyo/earnedit/frontend/src/constants/userConstants.js":"18","/Users/onesmusnyakotyo/earnedit/frontend/src/screens/LoginScreen.js":"19","/Users/onesmusnyakotyo/earnedit/frontend/src/screens/RegisterScreen.js":"20","/Users/onesmusnyakotyo/earnedit/frontend/src/components/FormContainer.js":"21","/Users/onesmusnyakotyo/earnedit/frontend/src/components/Message.js":"22","/Users/onesmusnyakotyo/earnedit/frontend/src/components/Loader.js":"23","/Users/onesmusnyakotyo/earnedit/frontend/src/actions/userActions.js":"24","/Users/onesmusnyakotyo/earnedit/frontend/src/screens/PickupPoints.js":"25","/Users/onesmusnyakotyo/earnedit/frontend/src/reducers/orderReducers.js":"26","/Users/onesmusnyakotyo/earnedit/frontend/src/constants/orderConstants.js":"27","/Users/onesmusnyakotyo/earnedit/frontend/src/actions/orderActions.js":"28","/Users/onesmusnyakotyo/earnedit/frontend/src/screens/PlaceOrderScreen.js":"29","/Users/onesmusnyakotyo/earnedit/frontend/src/components/StripePage.js":"30","/Users/onesmusnyakotyo/earnedit/frontend/src/screens/CheckoutScreen/CheckOut.js":"31","/Users/onesmusnyakotyo/earnedit/frontend/src/screens/CheckoutScreen/StripeCheckout.js":"32","/Users/onesmusnyakotyo/earnedit/frontend/src/screens/CheckoutScreen/StripeHelper.js":"33","/Users/onesmusnyakotyo/earnedit/frontend/src/screens/CheckoutScreen/Success.js":"34","/Users/onesmusnyakotyo/earnedit/frontend/src/screens/CheckoutScreen/Cancelled.js":"35","/Users/onesmusnyakotyo/earnedit/frontend/src/screens/ProfileScreen.js":"36","/Users/onesmusnyakotyo/earnedit/frontend/src/screens/OrderMyListScreen.js":"37","/Users/onesmusnyakotyo/earnedit/frontend/src/screens/OrderListScreen.js":"38","/Users/onesmusnyakotyo/earnedit/frontend/src/components/SearchBox.js":"39","/Users/onesmusnyakotyo/earnedit/frontend/src/screens/UserListScreen.js":"40","/Users/onesmusnyakotyo/earnedit/frontend/src/screens/UserEditScreen.js":"41","/Users/onesmusnyakotyo/earnedit/frontend/src/screens/PayOutScreen.js":"42"},{"size":877,"mtime":1620333470979,"results":"43","hashOfConfig":"44"},{"size":362,"mtime":1619370256743,"results":"45","hashOfConfig":"44"},{"size":2611,"mtime":1620713662726,"results":"46","hashOfConfig":"44"},{"size":2516,"mtime":1620404597968,"results":"47","hashOfConfig":"44"},{"size":445,"mtime":1619498588033,"results":"48","hashOfConfig":"44"},{"size":5198,"mtime":1620653353645,"results":"49","hashOfConfig":"44"},{"size":1090,"mtime":1620636213561,"results":"50","hashOfConfig":"44"},{"size":1575,"mtime":1620666077332,"results":"51","hashOfConfig":"44"},{"size":6275,"mtime":1620578163536,"results":"52","hashOfConfig":"44"},{"size":3923,"mtime":1620502400477,"results":"53","hashOfConfig":"44"},{"size":977,"mtime":1619869609230,"results":"54","hashOfConfig":"44"},{"size":2380,"mtime":1620636396748,"results":"55","hashOfConfig":"44"},{"size":4406,"mtime":1620540047852,"results":"56","hashOfConfig":"44"},{"size":1684,"mtime":1619632118330,"results":"57","hashOfConfig":"44"},{"size":602,"mtime":1620539799666,"results":"58","hashOfConfig":"44"},{"size":2174,"mtime":1620675172109,"results":"59","hashOfConfig":"44"},{"size":3898,"mtime":1620652932204,"results":"60","hashOfConfig":"44"},{"size":1484,"mtime":1620492987378,"results":"61","hashOfConfig":"44"},{"size":2314,"mtime":1620664944444,"results":"62","hashOfConfig":"44"},{"size":3494,"mtime":1619788068376,"results":"63","hashOfConfig":"44"},{"size":383,"mtime":1619793673076,"results":"64","hashOfConfig":"44"},{"size":278,"mtime":1619447541803,"results":"65","hashOfConfig":"44"},{"size":379,"mtime":1619447518941,"results":"66","hashOfConfig":"44"},{"size":7192,"mtime":1620495468900,"results":"67","hashOfConfig":"44"},{"size":2732,"mtime":1620637670686,"results":"68","hashOfConfig":"44"},{"size":4913,"mtime":1620675115713,"results":"69","hashOfConfig":"44"},{"size":1321,"mtime":1620674981046,"results":"70","hashOfConfig":"44"},{"size":6466,"mtime":1620720591554,"results":"71","hashOfConfig":"44"},{"size":6864,"mtime":1620577666119,"results":"72","hashOfConfig":"44"},{"size":1990,"mtime":1620243318023,"results":"73","hashOfConfig":"44"},{"size":1887,"mtime":1620465465698,"results":"74","hashOfConfig":"44"},{"size":3207,"mtime":1620465437134,"results":"75","hashOfConfig":"44"},{"size":556,"mtime":1620410646729,"results":"76","hashOfConfig":"44"},{"size":3460,"mtime":1620666361352,"results":"77","hashOfConfig":"44"},{"size":1356,"mtime":1620578325813,"results":"78","hashOfConfig":"44"},{"size":6712,"mtime":1620655701727,"results":"79","hashOfConfig":"44"},{"size":3638,"mtime":1620752982630,"results":"80","hashOfConfig":"44"},{"size":4660,"mtime":1620751679644,"results":"81","hashOfConfig":"44"},{"size":839,"mtime":1620844143583,"results":"82","hashOfConfig":"44"},{"size":2818,"mtime":1620655822532,"results":"83","hashOfConfig":"44"},{"size":3133,"mtime":1620656912781,"results":"84","hashOfConfig":"44"},{"size":4597,"mtime":1620752359271,"results":"85","hashOfConfig":"44"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},"1ijkl5t",{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"88"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"88"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"147","usedDeprecatedRules":"88"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"150"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"155","usedDeprecatedRules":"88"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"164","usedDeprecatedRules":"88"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"167"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"170","usedDeprecatedRules":"88"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"179","usedDeprecatedRules":"88"},"/Users/onesmusnyakotyo/earnedit/frontend/src/index.js",[],["180","181"],"/Users/onesmusnyakotyo/earnedit/frontend/src/reportWebVitals.js",[],"/Users/onesmusnyakotyo/earnedit/frontend/src/App.js",[],"/Users/onesmusnyakotyo/earnedit/frontend/src/components/SendCostModal.js",[],"/Users/onesmusnyakotyo/earnedit/frontend/src/components/Footer.js",[],"/Users/onesmusnyakotyo/earnedit/frontend/src/components/Header.js",["182"],"import React from 'react'\nimport { LinkContainer } from 'react-router-bootstrap'\n//import { Route } from 'react-router-dom'\nimport { useDispatch, useSelector } from 'react-redux'\nimport {Navbar, Nav, Container, NavDropdown } from 'react-bootstrap'\nimport { logout } from '../actions/userActions'\nimport SearchBox  from './SearchBox'\n\n\nconst Header = () => {\n\n\n\n    const dispatch = useDispatch()\n    const userLogin = useSelector(state => state.userLogin)\n    const { userInfo } = userLogin\n\n    const logoutHandler = () => {\n        dispatch(logout())\n    }\n\n    return (\n        <header>\n            <Navbar bg=\"dark\" variant=\"dark\" expand=\"lg\" collapseOnSelect>\n                <Container>\n                    <LinkContainer to='/'>\n                        <Navbar.Brand>EarnIt</Navbar.Brand>\n                    </LinkContainer>\n                    <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n                    <Navbar.Collapse id=\"basic-navbar-nav\">\n                  \n                    <Nav className=\"ml-auto\">\n                        <LinkContainer to=\"/send\">  \n                        <Nav.Link>\n                            <i className=\"fas fa-paper-plane\"></i> SEND MONEY\n                        </Nav.Link>\n                    </LinkContainer>\n\n                    { userInfo && userInfo.isAdmin ? (\n                    <NavDropdown title= 'Admin'  id='adminmenu'>\n                        <LinkContainer to='/orderMylist'>\n                                  \n                            <NavDropdown.Item>\n                                <i className=\"fas fa-list\"></i> My Transactions\n                            </NavDropdown.Item>\n                        </LinkContainer>\n                        <LinkContainer to='/orderlist'>\n                                  \n                                <NavDropdown.Item>\n                                <i className=\"fas fa-list\"></i> All Transactions\n                                </NavDropdown.Item>\n                        </LinkContainer>\n                         <LinkContainer to='/userlist'>\n                                <NavDropdown.Item>\n                                <i className=\"fas fa-users\"></i> Users\n                                </NavDropdown.Item>\n                            </LinkContainer>\n\n                          \n                    </NavDropdown>   \n                    ) \n                    \n                    :\n                    \n                    userInfo ?\n                    (\n                        <LinkContainer to='/orderMylist'>\n                                  \n                            <Nav.Link>\n                               \n                              <i className=\"fas fa-list\"></i>   My Transactions\n                            </Nav.Link>\n                        </LinkContainer>\n                    )\n\n                    : \n\n                    (\n                        null\n                    )\n                            \n                        \n                    }\n                    \n                    { \n                    userInfo ? (\n                        <NavDropdown title= { userInfo.name }  id='username'>\n                            \n                            <LinkContainer to='/profile'>\n                                \n                                <NavDropdown.Item> \n                                <i className=\"fas fa-user\"></i> Profile\n                                </NavDropdown.Item>\n                            </LinkContainer>\n                            <NavDropdown.Item onClick={ logoutHandler }><i className=\"fas fa-sign-out-alt\"></i>  Logout\n                            </NavDropdown.Item>\n                        </NavDropdown>   \n\n                                        )\n                    : \n                        <LinkContainer to=\"/login\"> \n                            <Nav.Link>\n                                <i className= 'fas fa-user' ></i> Sign In\n                            </Nav.Link>\n                        </LinkContainer>   \n\n                    }                       \n                        \n                         \n{/* \n                    {userInfo && userInfo.isAdmin && (\n                        <NavDropdown title= 'Admin'  id='adminmenu'>\n                            <LinkContainer to='/admin/userlist'>\n                                <NavDropdown.Item>Users</NavDropdown.Item>\n                            </LinkContainer>\n                            <LinkContainer to='/admin/productlist'>\n                                <NavDropdown.Item>Products</NavDropdown.Item>\n                            </LinkContainer>\n                              <LinkContainer to='/admin/orderlist'>\n                                <NavDropdown.Item>Orders</NavDropdown.Item>\n                            </LinkContainer>\n                            \n                        </NavDropdown>   \n                    )\n                    }\n                     */}\n                    \n                        </Nav>\n                        \n                    </Navbar.Collapse>\n                </Container>\n            </Navbar>\n            \n        </header>\n    )\n}\n\nexport default Header\n","/Users/onesmusnyakotyo/earnedit/frontend/src/screens/HomeScreen.js",["183","184"],"import React, {useEffect, useState} from 'react'\n//import Message from '../components/Message'\n//import Loader from '../components/Loader'\nimport Process from '../components/Process'\nimport HomeCarousel from '../components/HomeCarousel'\nimport { Container } from 'react-bootstrap'\n//import CurrencyConverter from '../components/CurrencyConverter'\n\nconst HomeScreen = () => {\n\n\n\n    return (\n        <>\n            <Container>\n                <HomeCarousel />\n                     <h1 variant='success' className=\"text-center py-5\" >\n                        {/* <Badge variant=\"dark\">How It Works</Badge> */}\n                        Send Money Home Quickly\n                    </h1>\n                    <h3 variant='success' className=\"text-center py-3\" >\n                        {/* <Badge variant=\"dark\">How It Works</Badge> */}\n                        How It Works\n                    </h3>\n                    \n                <Process />\n\n                {/* <CurrencyConverter /> */}\n                \n            </Container>\n           \n        </>\n    )\n}\n\nexport default HomeScreen\n","/Users/onesmusnyakotyo/earnedit/frontend/src/screens/SendForm.js",[],"/Users/onesmusnyakotyo/earnedit/frontend/src/screens/RecepientScreen.js",[],"/Users/onesmusnyakotyo/earnedit/frontend/src/screens/CollectionMethod.js",[],"/Users/onesmusnyakotyo/earnedit/frontend/src/components/CountrySelector.js",[],"/Users/onesmusnyakotyo/earnedit/frontend/src/components/Process.js",[],"/Users/onesmusnyakotyo/earnedit/frontend/src/components/CurrencyConverter.js",[],"/Users/onesmusnyakotyo/earnedit/frontend/src/components/HomeCarousel.js",[],"/Users/onesmusnyakotyo/earnedit/frontend/src/components/CurrencyDisplay.js",[],"/Users/onesmusnyakotyo/earnedit/frontend/src/store.js",[],"/Users/onesmusnyakotyo/earnedit/frontend/src/reducers/userReducers.js",[],"/Users/onesmusnyakotyo/earnedit/frontend/src/constants/userConstants.js",[],"/Users/onesmusnyakotyo/earnedit/frontend/src/screens/LoginScreen.js",[],"/Users/onesmusnyakotyo/earnedit/frontend/src/screens/RegisterScreen.js",[],"/Users/onesmusnyakotyo/earnedit/frontend/src/components/FormContainer.js",[],"/Users/onesmusnyakotyo/earnedit/frontend/src/components/Message.js",[],"/Users/onesmusnyakotyo/earnedit/frontend/src/components/Loader.js",[],"/Users/onesmusnyakotyo/earnedit/frontend/src/actions/userActions.js",[],"/Users/onesmusnyakotyo/earnedit/frontend/src/screens/PickupPoints.js",[],"/Users/onesmusnyakotyo/earnedit/frontend/src/reducers/orderReducers.js",[],"/Users/onesmusnyakotyo/earnedit/frontend/src/constants/orderConstants.js",[],"/Users/onesmusnyakotyo/earnedit/frontend/src/actions/orderActions.js",[],"/Users/onesmusnyakotyo/earnedit/frontend/src/screens/PlaceOrderScreen.js",["185","186","187"],"import React, { useEffect } from 'react'\n//import { Link } from 'react-router-dom'\nimport { Button, Row, Col, ListGroup,Card } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Message from '../components/Message'\nimport { createOrder } from '../actions/orderActions'\nimport { LinkContainer } from 'react-router-bootstrap'\n//import { ORDER_CREATE_RESET } from '../constants/orderConstants'\n//import { USER_DETAILS_RESET } from '../constants/userConstants'\n\n\nconst PlaceOrderScreen = ({ history, location}) => {\n\n\n\n    const userLogin = useSelector((state) => state.userLogin)\n  const { userInfo } = userLogin\n\n  const order = useSelector((state) => state.order)\n\n   //   Calculate prices\n  const addDecimals = (num) => {\n    return (Math.round(num * 100) / 100).toFixed(2)\n  }\n\n  order.shippingAmount = addDecimals(order.sendAmount.fromAmount * 0.10, 0)\n\n  order.totalAmount = (\n    Number(order.sendAmount.fromAmount) +\n    Number(order.shippingAmount )\n    ).toFixed(2)\n\n  order.sendAmount.fromAmount = Number(order.sendAmount.fromAmount)\n\n  order.sendAmount.toAmount = Number(order.sendAmount.toAmount).toFixed(2)\n    \n  \n\n  const orderCreate =  useSelector(state => state.orderCreate)\n  //const { placeorder, success, error } = orderCreate\n   const { success, error } = orderCreate\n\n  // useEffect(() => {\n  //     if(success) {\n  //         //history.push(`/order/${order._id}`)\n  //         //history.push('/payment')\n  //         console.log('Transaction: ',success)\n  //       } \n  //       // eslint-disable-next-line\n  //   }, [history,success])\n\n     //const domainUrl = process.env.WEB_APP_URL\n\n    //`${domainUrl}/success?session_id={CHECKOUT_SESSION_ID}`\n\n  // const submitTransactionHandler = () => {\n   \n  //           dispatch(createOrder({\n  //             orderAmount: order.sendAmount,\n  //             shippingAmount: order.shippingAmount, \n  //             recipientAddress: order.recipientAddress,\n  //             totalAmount: order.totalAmount, \n  //             exchangeRate: order.exchangeRate,\n  //             sendCountry: order.sendCountry,\n  //             collectionMethod: order.collectionMethod.collectionMethod\n  //         }))\n   \n    \n  // }\n\n  // console.log('PlaceOrder-Location', location.pathname)\n\n  // console.log(location.pathname === '/success/orderSummary')\n\n  // const successCheckout = '/success/orderSummary' \n\n  \n  useEffect(() => {\n    if (!userInfo ) {\n       history.push('/login')\n    } \n  }, [history, userInfo])\n\n    return (\n      <>\n          \n        <Row>\n                <Col md={5}>\n                <ListGroup variant='flush'>\n                <ListGroup.Item>\n                  <h2>Recipient's Address</h2>\n                  \n                  <>\n                  <Row><Col>{order.recipientAddress.firstName} {order.recipientAddress.middleName} {' '} {order.recipientAddress.lastName},{' '}</Col></Row>\n                  \n                  \n                  <Row>\n                    <Col>{order.recipientAddress.address}, </Col>\n                  </Row>\n                  <Row>\n                    <Col>{order.recipientAddress.town},{' '}</Col>\n                  </Row>\n                  <Row>\n                    <Col>{order.recipientAddress.country}.{' '}</Col>\n                  </Row>\n                  <Row>\n                    <Col> {order.recipientAddress.email}{' '}</Col>\n                  </Row>\n                  <Row>\n                    <Col>{order.recipientAddress.phone}{' '}</Col>\n                    </Row> \n                  <Row>\n                    <Col>{order.recipientAddress.reason}</Col>\n                  </Row>  \n                  \n                  </>\n                    \n                  \n                </ListGroup.Item>\n\n                <ListGroup.Item>\n                  <h2>Money Collection Method</h2>\n                  {/* <>Method: </> */}\n                  <Row>\n                  <Col as='h6'>Method:</Col>\n                    <Col>{order.collectionMethod.collectionMethod}</Col>\n                  </Row>\n                  \n                </ListGroup.Item> \n\n                </ListGroup>\n                </Col>\n\n                <Col md={7}>\n                    <Card>\n                        <ListGroup variant='flush'>\n                            <ListGroup.Item>\n                                <h2>Transaction Summary</h2>\n                            </ListGroup.Item>\n                            <ListGroup.Item>\n                                <Row>\n                                    <Col>Sending</Col>\n                                    <Col>€{order.sendAmount.fromAmount}</Col>\n                                </Row>\n\n                            </ListGroup.Item>\n                            <ListGroup.Item>\n                                <Row>\n                                    <Col>Transaction Fee</Col>\n                                    <Col>${order.shippingAmount}</Col>\n                                </Row>\n\n                            </ListGroup.Item>\n                            <ListGroup.Item>\n                                <Row>\n                                    <Col>Exchange Rate</Col>\n                                    <Col> € 1 = $ {order.sendAmount.exchangeRate} </Col>\n                                </Row>\n\n                            </ListGroup.Item>\n                            <ListGroup.Item>\n                                <Row>\n                                    <Col>Total Amount</Col>\n                                    <Col>${order.totalAmount}</Col>\n                                </Row>\n\n                            </ListGroup.Item>\n                            <ListGroup.Item>\n                                <Row>\n                                    <Col>Your Receiver Gets</Col>\n                                    <Col>$ {order.sendAmount.toAmount}</Col>\n                                </Row>\n\n                            </ListGroup.Item>\n                            <ListGroup.Item>\n                                {error && <Message variant='danger'>{error}</Message>}\n                            </ListGroup.Item>\n                            <ListGroup.Item>\n                              \n                                \n                             \n                              {/* <Button type='button' className='btn-block' disabled={order.cartItems === 0 } */}\n                               <LinkContainer to='/checkout'>\n                                  <Button type='button' className='btn-block' \n                                   > Continue \n                                  </Button>\n                              </LinkContainer>\n\n                            </ListGroup.Item>\n\n                        </ListGroup>\n                    </Card>\n                </Col>\n      </Row>\n    </>\n  )\n\n\n  \n}\n\nexport default PlaceOrderScreen\n","/Users/onesmusnyakotyo/earnedit/frontend/src/components/StripePage.js",[],["188","189"],"/Users/onesmusnyakotyo/earnedit/frontend/src/screens/CheckoutScreen/CheckOut.js",[],"/Users/onesmusnyakotyo/earnedit/frontend/src/screens/CheckoutScreen/StripeCheckout.js",["190"],"import React, {useState} from 'react'\nimport {  useStripe } from '@stripe/react-stripe-js'\nimport { useSelector } from 'react-redux'\nimport { fetchFromAPI }  from './StripeHelper'\nimport {Button, Form } from 'react-bootstrap'\nimport Loader from '../../components/Loader'\nimport Message from '../../components/Message'\nimport FormContainer from '../../components/FormContainer'\n//import Stripe from 'stripe'\n//import { LinkContainer } from 'react-router-bootstrap'\n\n\nconst StripeCheckout = () => {\n\n  \n\n      const stripe = useStripe()\n\n    const [email, setEmail] = useState('')\n\n    const order  = useSelector((state) => state.order)\n\n\n   //   Calculate prices\n  const addDecimals = (num) => {\n    return (Math.round(num * 100) / 100).toFixed(2)\n  }\n\n\n    order.shippingAmount = addDecimals(order.sendAmount.fromAmount * 0.10, 0)\n\n  order.totalAmount = (\n    Number(order.sendAmount.fromAmount) +\n    Number(order.shippingAmount )\n    ).toFixed(2)\n\n    const transactionTotals = []\n\n    //console.log('Totals', transactionTotals)\n\n    transactionTotals.push(order.totalAmount)\n\n\n    const userLogin = useSelector(state => state.userLogin)\n\n\n    const { loading, error, userInfo} = userLogin\n\n\n    const checkoutHandler = async (e) => {\n        e.preventDefault()\n       \n        const line_items = transactionTotals.map(item => {\n         \n            return {\n                quantity: 1,\n                price_data: {\n                    currency:'usd',\n                    unit_amount: item * 100,\n                    product_data: {\n                        name: 'Money transfer',\n                        description: 'Money will be transfered immediately and ready for collection',\n                        //images: [item.imageUrl]\n                    }\n                }\n            }\n        })\n\n       \n\n        const response = await fetchFromAPI('create-checkout-session', {\n             body: { line_items, customer_email: email },\n            });\n\n\n\n\n        const { sessionId } = response;\n\n         \n\n        const { error } = await stripe.redirectToCheckout({\n             sessionId\n            });\n\n         if(error) {\n            console.log(error);\n            }\n\n\n         \n        }\n\n    return (\n        <>\n            <FormContainer>\n\n\n               {error && <Message variant='danger'>{error}</Message>}\n               {loading && <Loader />}\n                   \n                <h4 className='text-center py-3 m-3'>Please Checkout Below</h4>\n                 \n                     \n\n                <Form  onSubmit={checkoutHandler}> \n                <Form.Group className='text-center'>\n  \n                    <Form.Control \n                        type=\"email\" \n                        placeholder=\"Email\"  \n                        value={email}\n                        required\n                        onChange={(e) => setEmail(e.target.value)}\n                        />\n                    <br />\n    \n                    <Button type='submit' variant='primary'>\n                            Checkout\n                    </Button>\n  \n                </Form.Group>\n                </Form>  \n            </FormContainer>\n            </>\n    )\n}\n\nexport default StripeCheckout\n\n\n","/Users/onesmusnyakotyo/earnedit/frontend/src/screens/CheckoutScreen/StripeHelper.js",[],"/Users/onesmusnyakotyo/earnedit/frontend/src/screens/CheckoutScreen/Success.js",[],"/Users/onesmusnyakotyo/earnedit/frontend/src/screens/CheckoutScreen/Cancelled.js",[],"/Users/onesmusnyakotyo/earnedit/frontend/src/screens/ProfileScreen.js",["191","192"],"import React, { useState, useEffect} from 'react'\nimport { Table, Form, Button, Row, Col,  Container } from 'react-bootstrap'\nimport { LinkContainer } from 'react-router-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Message from '../components/Message'\nimport Loader from '../components/Loader'\nimport { getUserDetails, updateUserProfile } from '../actions/userActions'\nimport { USER_UPDATE_PROFILE_RESET } from '../constants/userConstants'\n//import { listMyOrders } from '../actions/orderActions'\n\n\n\n\nconst ProfileScreen = ({location, history}) => {\n    const [name, setName] = useState('')\n    const [email, setEmail] = useState('')\n    const [password, setPassword] = useState('')\n    const [confirmPassword, setConfirmPassword] = useState('')\n    const [message, setMessage] = useState(null)\n\n    const dispatch = useDispatch()\n\n    const userDetails = useSelector(state => state.userDetails)\n    const { loading, error, user} = userDetails\n\n    const userLogin = useSelector(state => state.userLogin)\n    const { userInfo} = userLogin\n\n    const userUpdateProfile = useSelector(state => state.userUpdateProfile)\n    const { success } = userUpdateProfile\n\n    // const orderListMy = useSelector((state) => state.orderListMy)\n    // const { loading: loadingOrders, error: errorOrders, orders } = orderListMy\n\n\n    useEffect(() => {\n        if(!userInfo) {\n            history.push('/login')\n        } else {\n            if(!user.name || success ){\n                dispatch({ type: USER_UPDATE_PROFILE_RESET })\n                dispatch(getUserDetails('profile'))\n                //dispatch(listMyOrders())\n            } else{\n                setName(user.name)\n                setEmail(user.email)\n            }\n        }\n    }, [dispatch, history, userInfo, user, success ])\n\n    const submitHandler = (e) => {\n        e.preventDefault()\n       if(password !== confirmPassword){\n           setMessage('Password do not match')\n       } else {\n            dispatch(updateUserProfile({ id: user._id, name, email, password }))\n       }\n       \n    }\n\n\n    return (\n    <>\n        <Container>\n          <Row>\n            \n              <Col >\n                <h2 className='text-center'>User Profile</h2>\n                {message && <Message variant='danger'>{message}</Message>}\n                {error && <Message variant='danger'>{error}</Message>}\n                {success && <Message variant='success'>Profile Updated</Message>}\n                {loading && <Loader />}\n                <Form onSubmit={submitHandler}>\n                    <Form.Group controlId='name' >\n                        <Form.Label >Name</Form.Label>\n                        <Form.Control \n                            type='name' \n                            placeholder='Enter name' \n                            value={name} \n                            onChange={(e) => setName(e.target.value)}>\n\n                        </Form.Control>\n                    </Form.Group>\n                    <Form.Group controlId='email'>\n                        <Form.Label>Email Address</Form.Label>\n                        <Form.Control \n                            type='email' \n                            placeholder='Enter email' \n                            value={email} \n                            onChange={(e) => setEmail(e.target.value)}>\n\n                        </Form.Control>\n                    </Form.Group>\n                    <Form.Group controlId='password'>\n                        <Form.Label>Password</Form.Label>\n                        <Form.Control \n                            type='password' \n                            placeholder='Enter password' \n                            value={password} \n                            onChange={(e) => setPassword(e.target.value)}>\n\n                        </Form.Control>\n                    </Form.Group>\n                    <Form.Group controlId='confirmPassword'>\n                        <Form.Label >Confirm Password</Form.Label>\n                        <Form.Control \n                            type='password' \n                            placeholder='Confirm password' \n                            value={confirmPassword} \n                            onChange={(e) => setConfirmPassword(e.target.value)}>\n\n                        </Form.Control>\n                    </Form.Group>\n\n                    <Button type='submit' variant='primary'>\n                        Update\n                    </Button>\n                </Form>\n              </Col>\n              {/* <Col md={9}>\n                  <h2>My Orders</h2>\n                  {loadingOrders ? (\n                  <Loader />\n                ) : errorOrders ? (\n                  <Message variant='danger'>{errorOrders}</Message>\n                ) : (\n                  <Table striped bordered hover responsive className='table-sm'>\n                    <thead>\n                      <tr>\n                        <th>ID</th>\n                        <th>DATE</th>\n                        <th>TOTAL</th>\n                        <th>PAID</th>\n                        <th>DELIVERED</th>\n                        <th></th>\n                      </tr>\n                    </thead>\n                    <tbody>\n                      {orders.map((order) => (\n                        <tr key={order._id}>\n                          <td>{order._id}</td>\n                          <td>{order.createdAt.substring(0, 10)}</td>\n                          <td>{order.totalPrice}</td>\n                          <td>\n                            {order.isPaid ? (\n                              order.paidAt.substring(0, 10)\n                            ) : (\n                              <i className='fas fa-times' style={{ color: 'red' }}></i>\n                            )}\n                          </td>\n                          <td>\n                            {order.isDelivered ? (\n                              order.deliveredAt.substring(0, 10)\n                            ) : (\n                              <i className='fas fa-times' style={{ color: 'red' }}></i>\n                            )}\n                          </td>\n                          <td>\n                            <LinkContainer to={`/order/${order._id}`}>\n                              <Button className='btn-sm' variant='light'>\n                                Details\n                              </Button>\n                            </LinkContainer>\n                          </td>\n                        </tr>\n                      ))}\n                    </tbody>\n                  </Table>\n                )}\n              </Col> */}\n          </Row>\n        </Container>\n   </>\n    )\n}\n\nexport default ProfileScreen\n","/Users/onesmusnyakotyo/earnedit/frontend/src/screens/OrderMyListScreen.js",["193","194"],"import React, { useEffect } from 'react'\nimport { LinkContainer } from 'react-router-bootstrap'\nimport {  Table, Button } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Message from '../components/Message'\nimport Loader from '../components/Loader'\nimport { listMyOrders} from '../actions/orderActions'\n\nconst OrderMyListScreen = ({ history }) => {\n  const dispatch = useDispatch()\n\n  const orderListMy = useSelector((state) => state.orderListMy)\n  const { loading, error, orders } = orderListMy\n  \n\n  const userLogin = useSelector((state) => state.userLogin)\n  const { userInfo } = userLogin\n\n  console.log(orders)\n\n  useEffect(() => {\n    if (userInfo) {\n      dispatch(listMyOrders())\n    } else {\n      history.push('/login')\n    }\n  }, [dispatch, history, userInfo])\n\n  return (\n    <>\n      \n      <h1 className=\"text-center py-3\">TRANSACTIONS</h1>\n      {loading ? (\n        <Loader />\n      ) : error ? (\n        <Message variant='danger'>{error}</Message>\n      ) : (\n        \n        <Table striped bordered hover responsive className='table-sm'>\n          <thead>\n            <tr>\n              <th>ID</th>\n              <th>DATE</th>\n              <th>SENDER EMAIL</th>\n              <th>TOTAL TO SEND</th>\n              <th>TOTAL SEND + FEE</th>\n              <th>RECIPIENT RECEIVES</th>\n              <th>RECIPIENT'S NAME</th>\n              <th>COUNTRY</th>\n              <th>MONEY COLLECTED</th>\n            \n            </tr>\n          </thead>\n          <tbody>\n            {orders.map((order) => (\n              <tr key={order._id}>\n                <td>{order._id}</td>\n                <td>{order.createdAt.substring(0, 10)}</td>\n                <td>{order.senderEmail}</td>\n                <td>€{order.orderAmount.fromAmount}</td>\n                <td>${order.totalAmount}</td>\n                <td>${order.orderAmount.toAmount}</td>\n                <td>{order.recipientAddress.firstName} {order.recipientAddress.lastName}</td>\n                <td>{order.recipientAddress.country}</td>\n                <td>\n\n                   {order && order.isCollected && order.collectedAt ? (\n                    \n                    order.collectedAt.substring(0, 10)\n  \n                  ) : (\n                    <i className='fas fa-times' style={{ color: 'red' }}></i>\n                  )}\n\n                  {/* {order && order.isCollected ? (\n                    // order.collectedAt.substring(0, 10)\n                    <p className='variant'>2021-05-13</p>\n                  ) : (\n                    <i className='fas fa-times' style={{ color: 'red' }}></i>\n                  )} */}\n                </td>\n              \n                {/* <td>\n                  {order && order.isPaid ? (\n                    order.paidAt.substring(0, 10) \n                  ) : (\n                    <i className='fas fa-times' style={{ color: 'red' }}></i>\n                  )}\n                </td> */}\n                {/* <td>\n                  {order && order.isDelivered ? (\n                    order.deliveredAt.substring(0, 10)\n                  ) : (\n                    <i className='fas fa-times' style={{ color: 'red' }}></i>\n                  )}\n                </td> */}\n                {/* <td>\n                  <LinkContainer to={`/order/${order._id}`}>\n                    <Button variant='light' className='btn-sm'>\n                      Details\n                    </Button>\n                  </LinkContainer>\n                </td> */}\n              </tr>\n            ))}\n          </tbody>\n\n        </Table>\n        \n      )}\n      \n    </>\n  )\n}\n\nexport default OrderMyListScreen","/Users/onesmusnyakotyo/earnedit/frontend/src/screens/OrderListScreen.js",["195"],"import React, { useEffect, useState } from 'react'\nimport { LinkContainer } from 'react-router-bootstrap'\nimport {  Table, Button } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Message from '../components/Message'\nimport Loader from '../components/Loader'\nimport { listOrders} from '../actions/orderActions'\n\n\n\nconst OrderListScreen = ({ history }) => {\n  const dispatch = useDispatch()\n\n  const orderList = useSelector((state) => state.orderList)\n  const { loading, error, orders } = orderList\n\n  console.log('COLLECTED',orders)\n\n \n\n  const userLogin = useSelector((state) => state.userLogin)\n  const { userInfo } = userLogin\n\n  \n\n  useEffect(() => {\n    if (userInfo && userInfo.isAdmin) {\n      dispatch(listOrders())\n    } else {\n      history.push('/login')\n    }\n  }, [dispatch, history, userInfo])\n\n\n\n\n\n\n  return (\n    <>\n      \n    <h1 className=\"text-center py-3\">TRANSACTIONS</h1>\n\n      {loading ? (\n        <Loader />\n      ) : error ? (\n        <Message variant='danger'>{error}</Message>\n      ) : (\n        \n        <Table striped bordered hover responsive className='table-sm'>\n          <thead>\n            <tr>\n              <th>ID</th>\n              <th>DATE</th>\n              <th>SENDER EMAIL</th>\n              <th>TOTAL TO SEND</th>\n              <th>TOTAL SEND + FEE</th>\n              <th>RECIPIENT RECEIVES</th>\n              <th>RECIPIENT</th>\n              <th>COUNTRY</th>\n              <th>PAYOUT + SIGNATURE</th>\n              <th>MONEY COLLECTED</th>\n            \n            </tr>\n          </thead>\n          <tbody>\n            {orders.map((order) => (\n              <tr key={order._id}>\n                <td>{order._id}</td>\n                <td>{order.createdAt.substring(0, 10)}</td>\n                <td>{order.senderEmail}</td>\n                \n                <td>€{order.orderAmount.fromAmount}</td>\n                <td>${order.totalAmount}</td>\n                <td>${order.orderAmount.toAmount}</td>\n                <td>{order.recipientAddress.firstName} {order.recipientAddress.lastName}</td>\n                <td>{order.recipientAddress.country}</td>\n                <td>\n                  {order && order.isCollected && order.payoutResult ? (\n                    <LinkContainer to={`/payout/${order._id}`}>\n                    <Button variant='success' className='btn-sm'>\n                      <i className='fas fa-hand-holding-usd '></i>\n                    </Button>\n                    </LinkContainer>\n                  )\n                  :\n                  (\n                    <LinkContainer to={`/payout/${order._id}`}>\n                    <Button variant='danger' className='btn-sm'>\n                      <i className='fas fa-hand-holding-usd '></i>\n                    </Button>\n                    </LinkContainer>\n                  )\n}\n\n                {/* Display payout and signature */}\n                <p>{order && order.isCollected && order.payoutResult ? (\n                      \n                      order.payoutResult.payoutSignature\n                   ) \n                   : \n                   \n                   (\n                    null\n                    )\n                } \n                </p>\n                  \n                </td>\n                <td>\n                  \n                  {order && order.isCollected && order.collectedAt ? (\n                    //order.collectedAt \n                    \n                    \n                    order.collectedAt.substring(0, 10)\n\n\n                    \n                  ) : (\n                    <i className='fas fa-times' style={{ color: 'red' }}></i>\n                  )}\n                </td>\n               \n                {/* <td>\n                  {order && order.isPaid ? (\n                    order.paidAt.substring(0, 10) \n                  ) : (\n                    <i className='fas fa-times' style={{ color: 'red' }}></i>\n                  )}\n                </td> */}\n                {/* <td>\n                  {order && order.isDelivered ? (\n                    order.deliveredAt.substring(0, 10)\n                  ) : (\n                    <i className='fas fa-times' style={{ color: 'red' }}></i>\n                  )}\n                </td> */}\n                {/* <td>\n                  <LinkContainer to={`/order/${order._id}`}>\n                    <Button variant='light' className='btn-sm'>\n                      Details\n                    </Button>\n                  </LinkContainer>\n                </td> */}\n              </tr>\n            ))}\n          </tbody>\n\n        </Table>\n        \n      )}\n      \n\n    </>\n  )\n      \n}\n\nexport default OrderListScreen","/Users/onesmusnyakotyo/earnedit/frontend/src/components/SearchBox.js",[],"/Users/onesmusnyakotyo/earnedit/frontend/src/screens/UserListScreen.js",[],"/Users/onesmusnyakotyo/earnedit/frontend/src/screens/UserEditScreen.js",[],"/Users/onesmusnyakotyo/earnedit/frontend/src/screens/PayOutScreen.js",["196"],"import React, {useState, useEffect} from 'react'\nimport { useSelector } from 'react-redux'\nimport {Form, Button} from 'react-bootstrap'\nimport { LinkContainer } from 'react-router-bootstrap'\nimport Message from '../components/Message'\nimport Loader from '../components/Loader'\nimport FormContainer from '../components/FormContainer'\nimport { useDispatch} from 'react-redux'\nimport { payOutOrder} from '../actions/orderActions'\n\nconst PayOut = ({ match, history}) => {\n\n\n     const orderId = match.params.id\n\n      \n\n      //const orderList = useSelector(state => state.orderList)\n\n    \n\n\n    const [payoutSignature, setPayoutSignature] = useState('')\n    const [clientIdCheck, setClientIdCheck] = useState('yes')\n    const [ clientNameCheck, setClientNameCheck] = useState('yes')\n    const [collectionNumber,  setCollectionNumber] = useState('yes')\n\n\n    const userLogin = useSelector(state => state.userLogin)\n    const { loading, error, userInfo} = userLogin\n    \n    const dispatch = useDispatch()\n\n     useEffect(() => {\n        if(!userInfo || !userInfo.isAdmin) {\n            history.push('/login')\n        } \n    }, [history, userInfo])\n\n     const submitHandler = (e, payoutResult) => {\n          e.preventDefault()\n        if(window.confirm('Are you sure, you have you filled in all the fields correctly?')) {\n            dispatch(payOutOrder(\n                orderId, \n                payoutResult = {\n                    email: userInfo.email,\n                    name: userInfo.name,\n                    payoutSignature: payoutSignature, \n                    clientNameCheck: clientNameCheck, \n                    clientIdCheck: clientIdCheck,\n                    collectionNumber: collectionNumber\n                }\n            ))\n            history.push('/orderlist')\n        }\n        \n     }\n\n\n    return (\n        <>\n             <FormContainer>\n\n\n                {error && <Message variant='danger'>{error}</Message>}\n               {loading && <Loader />} \n                   \n                <h5 className='text-center py-3 m-3'>Client Money Payout</h5>\n                 \n                     \n\n                <Form  onSubmit={submitHandler}> \n                <Form.Group >\n\n                 \n                     \n                    <h5 className='text-center py-2'>Please fill in the form below accurately</h5>\n  \n                    <Form.Control \n                        className='text-center'\n                        type=\"text\" \n                        placeholder=\"Enter Your Name\"  \n                        value={payoutSignature}\n                        required\n                        onChange={(e) => setPayoutSignature(e.target.value)}\n                        />\n                    <br />\n\n                    <Form.Check\n                            type= 'radio'\n                            label='Client ID Checked'\n                            id='clientId'\n                            name='clientIdCheck'\n                            value='Yes'\n                            required\n                            //checked\n                            Change={(e) => setClientIdCheck(e.target.value)}\n                        > \n                    </Form.Check>\n                    <br />\n                    <Form.Check\n                            type= 'radio'\n                            label='Client Name Checked'\n                            id='clientName'\n                            name='clientNameCheck'\n                            value='Yes'\n                            required\n                            //checked\n                            Change={(e) => setClientNameCheck(e.target.value)}\n                        > \n                    </Form.Check>\n                    <br />\n                    <Form.Check\n                            type= 'radio'\n                            label='Collection Number Checked'\n                            id='collection number'\n                            name='collectionNumber'\n                            value='Yes'\n                            required\n                            //checked\n                            Change={(e) => setCollectionNumber(e.target.value)}\n                        > \n                    </Form.Check>\n                    <br />\n                    \n                        <Button type='submit' variant='dark' >\n                            Continue\n                        </Button>\n                   \n                     \n  \n                </Form.Group>\n                </Form>  \n            </FormContainer>\n            \n        </>\n    )\n}\n\nexport default PayOut\n",{"ruleId":"197","replacedBy":"198"},{"ruleId":"199","replacedBy":"200"},{"ruleId":"201","severity":1,"message":"202","line":7,"column":8,"nodeType":"203","messageId":"204","endLine":7,"endColumn":17},{"ruleId":"201","severity":1,"message":"205","line":1,"column":16,"nodeType":"203","messageId":"204","endLine":1,"endColumn":25},{"ruleId":"201","severity":1,"message":"206","line":1,"column":27,"nodeType":"203","messageId":"204","endLine":1,"endColumn":35},{"ruleId":"201","severity":1,"message":"207","line":4,"column":10,"nodeType":"203","messageId":"204","endLine":4,"endColumn":21},{"ruleId":"201","severity":1,"message":"208","line":6,"column":10,"nodeType":"203","messageId":"204","endLine":6,"endColumn":21},{"ruleId":"201","severity":1,"message":"209","line":41,"column":12,"nodeType":"203","messageId":"204","endLine":41,"endColumn":19},{"ruleId":"197","replacedBy":"210"},{"ruleId":"199","replacedBy":"211"},{"ruleId":"201","severity":1,"message":"212","line":47,"column":29,"nodeType":"203","messageId":"204","endLine":47,"endColumn":37},{"ruleId":"201","severity":1,"message":"213","line":2,"column":10,"nodeType":"203","messageId":"204","endLine":2,"endColumn":15},{"ruleId":"201","severity":1,"message":"214","line":3,"column":10,"nodeType":"203","messageId":"204","endLine":3,"endColumn":23},{"ruleId":"201","severity":1,"message":"214","line":2,"column":10,"nodeType":"203","messageId":"204","endLine":2,"endColumn":23},{"ruleId":"201","severity":1,"message":"215","line":3,"column":18,"nodeType":"203","messageId":"204","endLine":3,"endColumn":24},{"ruleId":"201","severity":1,"message":"206","line":1,"column":28,"nodeType":"203","messageId":"204","endLine":1,"endColumn":36},{"ruleId":"201","severity":1,"message":"214","line":4,"column":10,"nodeType":"203","messageId":"204","endLine":4,"endColumn":23},"no-native-reassign",["216"],"no-negated-in-lhs",["217"],"no-unused-vars","'SearchBox' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'useState' is defined but never used.","'useDispatch' is defined but never used.","'createOrder' is defined but never used.","'success' is assigned a value but never used.",["216"],["217"],"'userInfo' is assigned a value but never used.","'Table' is defined but never used.","'LinkContainer' is defined but never used.","'Button' is defined but never used.","no-global-assign","no-unsafe-negation"]