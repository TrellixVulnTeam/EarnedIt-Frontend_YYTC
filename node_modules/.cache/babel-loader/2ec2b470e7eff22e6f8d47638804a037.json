{"ast":null,"code":"import { createStore, combineReducers, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension'; //import  { productListReducer, productDetailsReducer, productDeleteReducer, productCreateReducer, productUpdateReducer, productReviewCreateReducer, productTopRatedReducer   }  from './reducers/productReducers.js'\n//import { cartReducer } from './reducers/cartReducers'\n\nimport { userLoginReducer, userRegisterReducer } from './reducers/userReducers'; //import { orderCreateReducer, orderDetailsReducer, orderPayReducer, orderListMyReducer, orderListReducer, orderDeliverReducer } from './reducers/orderReducers'\n\nconst reducer = combineReducers({\n  userLogin: userLoginReducer,\n  userRegister: userRegisterReducer\n}); // RETREIVING USER FROM STORAGE\n\nconst userInfoFromStorage = localStorage.getItem('userInfo') ? JSON.parse(localStorage.getItem('userInfo')) : null; // INITIAL STATE\n\nconst initialState = {\n  userLogin: {\n    userInfo: userInfoFromStorage\n  }\n};\nconst middleware = [thunk];\nconst store = createStore(reducer, initialState, composeWithDevTools(applyMiddleware(...middleware)));\nexport default store;","map":{"version":3,"sources":["/Users/onesmusnyakotyo/earnedit/frontend/src/store.js"],"names":["createStore","combineReducers","applyMiddleware","thunk","composeWithDevTools","userLoginReducer","userRegisterReducer","reducer","userLogin","userRegister","userInfoFromStorage","localStorage","getItem","JSON","parse","initialState","userInfo","middleware","store"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,EAAuCC,eAAvC,QAA8D,OAA9D;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,SAASC,mBAAT,QAAoC,0BAApC,C,CACA;AACA;;AACA,SAASC,gBAAT,EAA2BC,mBAA3B,QAAqD,yBAArD,C,CACA;;AAGA,MAAMC,OAAO,GAAGN,eAAe,CAAC;AAC5BO,EAAAA,SAAS,EAAEH,gBADiB;AAE/BI,EAAAA,YAAY,EAAEH;AAFiB,CAAD,CAA/B,C,CAKA;;AACA,MAAMI,mBAAmB,GAAGC,YAAY,CAACC,OAAb,CAAqB,UAArB,IACzBC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,UAArB,CAAX,CADyB,GAEzB,IAFH,C,CAKA;;AACA,MAAMG,YAAY,GAAG;AAEpBP,EAAAA,SAAS,EAAE;AACVQ,IAAAA,QAAQ,EAAEN;AADA;AAFS,CAArB;AAQA,MAAMO,UAAU,GAAG,CAACd,KAAD,CAAnB;AAEA,MAAMe,KAAK,GAAGlB,WAAW,CAACO,OAAD,EAAUQ,YAAV,EAAwBX,mBAAmB,CAACF,eAAe,CAAC,GAAGe,UAAJ,CAAhB,CAA3C,CAAzB;AAEA,eAAeC,KAAf","sourcesContent":["import { createStore, combineReducers, applyMiddleware } from 'redux'\nimport thunk from 'redux-thunk'\nimport { composeWithDevTools } from 'redux-devtools-extension'\n//import  { productListReducer, productDetailsReducer, productDeleteReducer, productCreateReducer, productUpdateReducer, productReviewCreateReducer, productTopRatedReducer   }  from './reducers/productReducers.js'\n//import { cartReducer } from './reducers/cartReducers'\nimport { userLoginReducer, userRegisterReducer} from './reducers/userReducers'\n//import { orderCreateReducer, orderDetailsReducer, orderPayReducer, orderListMyReducer, orderListReducer, orderDeliverReducer } from './reducers/orderReducers'\n\n\nconst reducer = combineReducers({\n    userLogin: userLoginReducer,\n\tuserRegister: userRegisterReducer,\n})\n\n// RETREIVING USER FROM STORAGE\nconst userInfoFromStorage = localStorage.getItem('userInfo')\n\t? JSON.parse(localStorage.getItem('userInfo'))\n\t: null\n\n\n// INITIAL STATE\nconst initialState = {\n\t\n\tuserLogin: {\n\t\tuserInfo: userInfoFromStorage,\n\t},\n\n}\n\nconst middleware = [thunk]\n\nconst store = createStore(reducer, initialState, composeWithDevTools(applyMiddleware(...middleware)))\n\nexport default store"]},"metadata":{},"sourceType":"module"}