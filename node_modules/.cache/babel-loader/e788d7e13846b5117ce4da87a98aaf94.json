{"ast":null,"code":"var _jsxFileName = \"/Users/onesmusnyakotyo/earnedit/frontend/src/screens/PayOutScreen.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { useSelector } from 'react-redux';\nimport { Form, Button } from 'react-bootstrap';\nimport { LinkContainer } from 'react-router-bootstrap';\nimport Message from '../components/Message';\nimport Loader from '../components/Loader';\nimport FormContainer from '../components/FormContainer';\nimport { useDispatch } from 'react-redux';\nimport { payOutOrder } from '../actions/orderActions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst PayOut = ({\n  history\n}) => {\n  _s();\n\n  const [payoutSignature, setPayoutSignature] = useState('');\n  const [clientIdCheck, setClientIdCheck] = useState('yes');\n  const [clientNameCheck, setClientNameCheck] = useState('yes');\n  const [collectionName, setCollectionName] = useState('yes');\n  const userLogin = useSelector(state => state.userLogin);\n  const {\n    loading,\n    error,\n    userInfo\n  } = userLogin;\n  const dispatch = useDispatch();\n  useEffect(() => {\n    if (!userInfo || !userInfo.isAdmin) {\n      history.push('/login');\n    }\n  }, [history, userInfo]);\n\n  const submitHandler = e => {\n    e.preventDefault();\n\n    if (window.confirm('Are you sure, have you filled in all the fields?')) {\n      dispatch(payOutOrder({\n        payoutSignature,\n        collectionName,\n        clientNameCheck,\n        clientIdCheck\n      }));\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(FormContainer, {\n      children: [error && /*#__PURE__*/_jsxDEV(Message, {\n        variant: \"danger\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 27\n      }, this), loading && /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 28\n      }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n        className: \"text-center py-3 m-3\",\n        children: \"Client Money Payout\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Form, {\n        onSubmit: submitHandler,\n        children: /*#__PURE__*/_jsxDEV(Form.Group, {\n          children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n            className: \"text-center py-2\",\n            children: \"Please fill in the form below accurately\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            className: \"text-center\",\n            type: \"text\",\n            placeholder: \"Enter Your Name\",\n            value: payoutSignature,\n            required: true,\n            onChange: e => setPayoutSignature(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Form.Check, {\n            type: \"radio\",\n            label: \"Client ID Checked\",\n            id: \"clientId\",\n            name: \"clientIdCheck\",\n            value: \"clientIdCheck\",\n            required: true //checked\n            ,\n            Change: e => setClientIdCheck(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Form.Check, {\n            type: \"radio\",\n            label: \"Client Name Checked\",\n            id: \"clientName\",\n            name: \"clientNameCheck\",\n            value: \"clientNameCheck\",\n            required: true //checked\n            ,\n            Change: e => setClientNameCheck(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Form.Check, {\n            type: \"radio\",\n            label: \"Collection Number Checked\",\n            id: \"collection number\",\n            name: \"collectionNumber\",\n            value: \"collectionNumber\",\n            required: true //checked\n            ,\n            Change: e => setCollectionName(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            type: \"submit\",\n            variant: \"primary\",\n            children: \"Continue\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 22\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 14\n    }, this)\n  }, void 0, false);\n};\n\n_s(PayOut, \"IZKqF91JPxBYLWburI5Qd2D31L4=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = PayOut;\nexport default PayOut;\n\nvar _c;\n\n$RefreshReg$(_c, \"PayOut\");","map":{"version":3,"sources":["/Users/onesmusnyakotyo/earnedit/frontend/src/screens/PayOutScreen.js"],"names":["React","useState","useEffect","useSelector","Form","Button","LinkContainer","Message","Loader","FormContainer","useDispatch","payOutOrder","PayOut","history","payoutSignature","setPayoutSignature","clientIdCheck","setClientIdCheck","clientNameCheck","setClientNameCheck","collectionName","setCollectionName","userLogin","state","loading","error","userInfo","dispatch","isAdmin","push","submitHandler","e","preventDefault","window","confirm","target","value"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react'\nimport { useSelector } from 'react-redux'\nimport {Form, Button} from 'react-bootstrap'\nimport { LinkContainer } from 'react-router-bootstrap'\nimport Message from '../components/Message'\nimport Loader from '../components/Loader'\nimport FormContainer from '../components/FormContainer'\nimport { useDispatch} from 'react-redux'\nimport { payOutOrder} from '../actions/orderActions'\n\nconst PayOut = ({history}) => {\n    const [payoutSignature, setPayoutSignature] = useState('')\n    const [clientIdCheck, setClientIdCheck] = useState('yes')\n    const [ clientNameCheck, setClientNameCheck] = useState('yes')\n    const [collectionName,  setCollectionName] = useState('yes')\n\n\n    const userLogin = useSelector(state => state.userLogin)\n    const { loading, error, userInfo} = userLogin\n    \n    const dispatch = useDispatch()\n\n     useEffect(() => {\n        if(!userInfo || !userInfo.isAdmin) {\n            history.push('/login')\n        } \n    }, [history, userInfo])\n\n     const submitHandler = (e) => {\n          e.preventDefault()\n        if(window.confirm('Are you sure, have you filled in all the fields?')) {\n            dispatch(payOutOrder({payoutSignature, collectionName , clientNameCheck, clientIdCheck }))\n        }\n        \n     }\n\n\n    return (\n        <>\n             <FormContainer>\n\n\n                {error && <Message variant='danger'>{error}</Message>}\n               {loading && <Loader />} \n                   \n                <h5 className='text-center py-3 m-3'>Client Money Payout</h5>\n                 \n                     \n\n                <Form  onSubmit={submitHandler}> \n                <Form.Group >\n\n                 \n                     \n                    <h5 className='text-center py-2'>Please fill in the form below accurately</h5>\n  \n                    <Form.Control \n                        className='text-center'\n                        type=\"text\" \n                        placeholder=\"Enter Your Name\"  \n                        value={payoutSignature}\n                        required\n                        onChange={(e) => setPayoutSignature(e.target.value)}\n                        />\n                    <br />\n\n                    <Form.Check\n                            type= 'radio'\n                            label='Client ID Checked'\n                            id='clientId'\n                            name='clientIdCheck'\n                            value='clientIdCheck'\n                            required\n                            //checked\n                            Change={(e) => setClientIdCheck(e.target.value)}\n                        > \n                    </Form.Check>\n                    <br />\n                    <Form.Check\n                            type= 'radio'\n                            label='Client Name Checked'\n                            id='clientName'\n                            name='clientNameCheck'\n                            value='clientNameCheck'\n                            required\n                            //checked\n                            Change={(e) => setClientNameCheck(e.target.value)}\n                        > \n                    </Form.Check>\n                    <br />\n                    <Form.Check\n                            type= 'radio'\n                            label='Collection Number Checked'\n                            id='collection number'\n                            name='collectionNumber'\n                            value='collectionNumber'\n                            required\n                            //checked\n                            Change={(e) => setCollectionName(e.target.value)}\n                        > \n                    </Form.Check>\n                    <br />\n\n                     <Button type='submit' variant='primary'>\n                            Continue\n                    </Button>\n  \n                </Form.Group>\n                </Form>  \n            </FormContainer>\n            \n        </>\n    )\n}\n\nexport default PayOut\n"]},"metadata":{},"sourceType":"module"}