{"ast":null,"code":"import { createStore, combineReducers, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension'; //import  { productListReducer, productDetailsReducer, productDeleteReducer, productCreateReducer, productUpdateReducer, productReviewCreateReducer, productTopRatedReducer   }  from './reducers/productReducers.js'\n//import { cartReducer } from './reducers/cartReducers'\n\nimport { userLoginReducer, userRegisterReducer } from './reducers/userReducers';\nimport { orderReducer, orderCreateReducer } from './reducers/orderReducers';\nconst reducer = combineReducers({\n  userLogin: userLoginReducer,\n  userRegister: userRegisterReducer,\n  order: orderReducer,\n  orderCreate: orderCreateReducer\n}); // RETREIVING USER FROM STORAGE\n\nconst userInfoFromStorage = localStorage.getItem('userInfo') ? JSON.parse(localStorage.getItem('userInfo')) : null; // RETREIVING USER FROM STORAGE\n\nconst sendCountryFromStorage = localStorage.getItem('sendCountry') ? JSON.parse(localStorage.getItem('sendCountry')) : {}; // RETREIVING USER FROM STORAGE\n\nconst sendAmountFromStorage = localStorage.getItem('sendAmount') ? JSON.parse(localStorage.getItem('sendAmount')) : {}; // RETREIVING USER FROM STORAGE\n\nconst recipientAddressFromStorage = localStorage.getItem('recipientAddress') ? JSON.parse(localStorage.getItem('recipientAddress')) : {}; // RETREIVING USER FROM STORAGE\n\nconst collectionMethodFromStorage = localStorage.getItem('collectionMethod') ? JSON.parse(localStorage.getItem('collectionMethod')) : {}; // INITIAL STATE\n\nconst initialState = {\n  order: {\n    sendAmount: sendAmountFromStorage,\n    sendCountry: sendCountryFromStorage,\n    recipientAddress: recipientAddressFromStorage,\n    collectionMethod: collectionMethodFromStorage\n  },\n  userLogin: {\n    userInfo: userInfoFromStorage\n  }\n};\nconst middleware = [thunk];\nconst store = createStore(reducer, initialState, composeWithDevTools(applyMiddleware(...middleware)));\nexport default store;","map":{"version":3,"sources":["/Users/onesmusnyakotyo/earnedit/frontend/src/store.js"],"names":["createStore","combineReducers","applyMiddleware","thunk","composeWithDevTools","userLoginReducer","userRegisterReducer","orderReducer","orderCreateReducer","reducer","userLogin","userRegister","order","orderCreate","userInfoFromStorage","localStorage","getItem","JSON","parse","sendCountryFromStorage","sendAmountFromStorage","recipientAddressFromStorage","collectionMethodFromStorage","initialState","sendAmount","sendCountry","recipientAddress","collectionMethod","userInfo","middleware","store"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,EAAuCC,eAAvC,QAA8D,OAA9D;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,SAASC,mBAAT,QAAoC,0BAApC,C,CACA;AACA;;AACA,SAASC,gBAAT,EAA2BC,mBAA3B,QAAqD,yBAArD;AACA,SAASC,YAAT,EAAuBC,kBAAvB,QAAiD,0BAAjD;AAIA,MAAMC,OAAO,GAAGR,eAAe,CAAC;AAC5BS,EAAAA,SAAS,EAAEL,gBADiB;AAE/BM,EAAAA,YAAY,EAAEL,mBAFiB;AAG/BM,EAAAA,KAAK,EAAEL,YAHwB;AAI/BM,EAAAA,WAAW,EAAEL;AAJkB,CAAD,CAA/B,C,CAQA;;AACA,MAAMM,mBAAmB,GAAGC,YAAY,CAACC,OAAb,CAAqB,UAArB,IACzBC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,UAArB,CAAX,CADyB,GAEzB,IAFH,C,CAKA;;AACA,MAAMG,sBAAsB,GAAGJ,YAAY,CAACC,OAAb,CAAqB,aAArB,IAC3BC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,aAArB,CAAX,CAD2B,GAE3B,EAFJ,C,CAIE;;AACF,MAAMI,qBAAqB,GAAGL,YAAY,CAACC,OAAb,CAAqB,YAArB,IAC1BC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,YAArB,CAAX,CAD0B,GAE1B,EAFJ,C,CAIE;;AACF,MAAMK,2BAA2B,GAAGN,YAAY,CAACC,OAAb,CAAqB,kBAArB,IAChCC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,kBAArB,CAAX,CADgC,GAEhC,EAFJ,C,CAIG;;AACH,MAAMM,2BAA2B,GAAGP,YAAY,CAACC,OAAb,CAAqB,kBAArB,IAChCC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,kBAArB,CAAX,CADgC,GAEhC,EAFJ,C,CAKA;;AACA,MAAMO,YAAY,GAAG;AACpBX,EAAAA,KAAK,EAAE;AACNY,IAAAA,UAAU,EAAEJ,qBADN;AAENK,IAAAA,WAAW,EAAEN,sBAFP;AAGNO,IAAAA,gBAAgB,EAAEL,2BAHZ;AAINM,IAAAA,gBAAgB,EAAEL;AAJZ,GADa;AAQpBZ,EAAAA,SAAS,EAAE;AACVkB,IAAAA,QAAQ,EAAEd;AADA;AARS,CAArB;AAeA,MAAMe,UAAU,GAAG,CAAC1B,KAAD,CAAnB;AAEA,MAAM2B,KAAK,GAAG9B,WAAW,CAACS,OAAD,EAAUc,YAAV,EAAwBnB,mBAAmB,CAACF,eAAe,CAAC,GAAG2B,UAAJ,CAAhB,CAA3C,CAAzB;AAEA,eAAeC,KAAf","sourcesContent":["import { createStore, combineReducers, applyMiddleware } from 'redux'\nimport thunk from 'redux-thunk'\nimport { composeWithDevTools } from 'redux-devtools-extension'\n//import  { productListReducer, productDetailsReducer, productDeleteReducer, productCreateReducer, productUpdateReducer, productReviewCreateReducer, productTopRatedReducer   }  from './reducers/productReducers.js'\n//import { cartReducer } from './reducers/cartReducers'\nimport { userLoginReducer, userRegisterReducer} from './reducers/userReducers'\nimport { orderReducer, orderCreateReducer,} from './reducers/orderReducers'\n\n\n\nconst reducer = combineReducers({\n    userLogin: userLoginReducer,\n\tuserRegister: userRegisterReducer,\n\torder: orderReducer,\n\torderCreate: orderCreateReducer,\n\t\n})\n\n// RETREIVING USER FROM STORAGE\nconst userInfoFromStorage = localStorage.getItem('userInfo')\n\t? JSON.parse(localStorage.getItem('userInfo'))\n\t: null\n\n\n// RETREIVING USER FROM STORAGE\nconst sendCountryFromStorage = localStorage.getItem('sendCountry')\n  ? JSON.parse(localStorage.getItem('sendCountry'))\n  : {}\n\n  // RETREIVING USER FROM STORAGE\nconst sendAmountFromStorage = localStorage.getItem('sendAmount')\n  ? JSON.parse(localStorage.getItem('sendAmount'))\n  : {}\n\n  // RETREIVING USER FROM STORAGE\nconst recipientAddressFromStorage = localStorage.getItem('recipientAddress')\n  ? JSON.parse(localStorage.getItem('recipientAddress'))\n  : {}\n\n   // RETREIVING USER FROM STORAGE\nconst collectionMethodFromStorage = localStorage.getItem('collectionMethod')\n  ? JSON.parse(localStorage.getItem('collectionMethod'))\n  : {}\n\n\n// INITIAL STATE\nconst initialState = {\n\torder: {\n\t\tsendAmount: sendAmountFromStorage,\n\t\tsendCountry: sendCountryFromStorage,\n\t\trecipientAddress: recipientAddressFromStorage,\n\t\tcollectionMethod: collectionMethodFromStorage\n\n\t},\n\tuserLogin: {\n\t\tuserInfo: userInfoFromStorage,\n\t},\n\n}\n\n\nconst middleware = [thunk]\n\nconst store = createStore(reducer, initialState, composeWithDevTools(applyMiddleware(...middleware)))\n\nexport default store"]},"metadata":{},"sourceType":"module"}