{"ast":null,"code":"var _jsxFileName = \"/Users/onesmusnyakotyo/earnedit/frontend/src/components/CurrencyConverter.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport CurrencyDisplay from './CurrencyDisplay';\nimport { Card, Button } from 'react-bootstrap';\nimport { LinkContainer } from 'react-router-bootstrap';\nimport { useDispatch } from 'react-redux'; //import SendCostModal from './SendCostModal';\n\nimport { saveSendAmount } from '../actions/orderActions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BASE_URL = 'http://api.exchangeratesapi.io/v1/latest?access_key=05a30093e4bf0babea0056584359f583'; //const BASE_URL = 'https://api.exchangeratesapi.io/latest?access_key=243a6baba190aebcd28de3852c8aa39e'\n//const BASE_URL = 'http://api.currencylayer.com/live?access_key=243a6baba190aebcd28de3852c8aa39e'\n\nconsole.log(BASE_URL);\n\nconst CurrencyConverter = () => {\n  _s();\n\n  const [currencyOptions, setCurrencyOptions] = useState([]);\n  const [fromCurrency, setFromCurrency] = useState();\n  const [toCurrency, setToCurrency] = useState();\n  const [exchangeRate, setExchangeRate] = useState();\n  const [amount, setAmount] = useState(1);\n  const [amountInFromCurrency, setAmountInFromCurrency] = useState(true); // const order = useSelector((state) => state.order)\n  // const { sendCountry} = order\n  // console.log('Country', sendCountry)\n  // console.log('CurrencyC', sendCountry.value)\n  //  const sendAmount = useSelector((state) => state.orderAmount)\n  // console.log('ORDERAmount', sendAmount)\n\n  let toAmount, fromAmount;\n\n  if (amountInFromCurrency) {\n    fromAmount = amount;\n    toAmount = amount * exchangeRate;\n  } else {\n    toAmount = amount;\n    fromAmount = amount / exchangeRate || 0;\n  }\n\n  useEffect(() => {\n    fetch(BASE_URL).then(res => res.json()).then(data => {\n      console.log(data);\n      const firstCurrency = Object.keys(data.rates)[0];\n      setCurrencyOptions([data.base, ...Object.keys(data.rates)]);\n      setFromCurrency(data.base);\n      setToCurrency(firstCurrency);\n      setExchangeRate(data.rates[firstCurrency]);\n    });\n  }, []);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    if (fromCurrency === toCurrency && fromCurrency !== undefined && toCurrency !== undefined) {\n      setExchangeRate(6);\n      return;\n    }\n\n    if (fromCurrency != null && toCurrency != null) {\n      fetch(`${BASE_URL}&base=${fromCurrency}&symbols=${toCurrency}`).then(res => res.json()).then(data => setExchangeRate(data.rates[toCurrency]));\n    }\n\n    dispatch(saveSendAmount({\n      fromAmount,\n      toAmount,\n      exchangeRate\n    }));\n  }, [dispatch, fromCurrency, toCurrency, fromAmount, toAmount, exchangeRate]);\n\n  function handleFromAmountChange(e) {\n    setAmount(e.target.value);\n    setAmountInFromCurrency(true);\n  }\n\n  function handleToAmountChange(e) {\n    setAmount(e.target.value);\n    setAmountInFromCurrency(false);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"text-center py-5\",\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n        as: \"h4\",\n        children: \"Currency Converter\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n        children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n          children: \"Sending\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(CurrencyDisplay, {\n          currencyOptions: currencyOptions,\n          selectedCurrency: fromCurrency,\n          onChangeCurrency: e => setFromCurrency(e.target.value),\n          onChangeAmount: handleFromAmountChange,\n          amount: fromAmount\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"equals py-3\",\n          children: \"=\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n          children: \"Receiver gets\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\" 1 \", `${fromCurrency}`, \" =  \", `${exchangeRate}`, \"  \", toCurrency]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(CurrencyDisplay, {\n          currencyOptions: currencyOptions,\n          selectedCurrency: toCurrency,\n          onChangeCurrency: e => setToCurrency(e.target.value),\n          onChangeAmount: handleToAmountChange,\n          amount: toAmount\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(LinkContainer, {\n          className: \"py-2 mt-3\",\n          to: \"/send/sendcost\",\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"dark\",\n            children: \" Done\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Card.Footer, {\n        className: \"text-muted\",\n        children: \"Latest Exchange Rate\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 97,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CurrencyConverter, \"T4RFopKh4kNTsIDVm4Gfj5P9w/4=\", false, function () {\n  return [useDispatch];\n});\n\n_c = CurrencyConverter;\nexport default CurrencyConverter;\n\nvar _c;\n\n$RefreshReg$(_c, \"CurrencyConverter\");","map":{"version":3,"sources":["/Users/onesmusnyakotyo/earnedit/frontend/src/components/CurrencyConverter.js"],"names":["React","useEffect","useState","CurrencyDisplay","Card","Button","LinkContainer","useDispatch","saveSendAmount","BASE_URL","console","log","CurrencyConverter","currencyOptions","setCurrencyOptions","fromCurrency","setFromCurrency","toCurrency","setToCurrency","exchangeRate","setExchangeRate","amount","setAmount","amountInFromCurrency","setAmountInFromCurrency","toAmount","fromAmount","fetch","then","res","json","data","firstCurrency","Object","keys","rates","base","dispatch","undefined","handleFromAmountChange","e","target","value","handleToAmountChange"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport CurrencyDisplay from './CurrencyDisplay'\nimport { Card, Button  } from 'react-bootstrap'\nimport { LinkContainer } from 'react-router-bootstrap'\nimport { useDispatch } from 'react-redux'\n//import SendCostModal from './SendCostModal';\nimport { saveSendAmount} from '../actions/orderActions'\n\n\nconst BASE_URL = 'http://api.exchangeratesapi.io/v1/latest?access_key=05a30093e4bf0babea0056584359f583'\n//const BASE_URL = 'https://api.exchangeratesapi.io/latest?access_key=243a6baba190aebcd28de3852c8aa39e'\n//const BASE_URL = 'http://api.currencylayer.com/live?access_key=243a6baba190aebcd28de3852c8aa39e'\n\nconsole.log(BASE_URL)\n\nconst CurrencyConverter = () => {\n\n\n  const [currencyOptions, setCurrencyOptions] = useState([])\n  const [fromCurrency, setFromCurrency] = useState()\n  const [toCurrency, setToCurrency] = useState()\n  const [exchangeRate, setExchangeRate] = useState()\n  const [amount, setAmount] = useState(1)\n  const [amountInFromCurrency, setAmountInFromCurrency] = useState(true)\n\n  // const order = useSelector((state) => state.order)\n  // const { sendCountry} = order\n\n  // console.log('Country', sendCountry)\n\n    \n\n  // console.log('CurrencyC', sendCountry.value)\n\n  //  const sendAmount = useSelector((state) => state.orderAmount)\n  \n\n  // console.log('ORDERAmount', sendAmount)\n\n  let toAmount, fromAmount\n  if (amountInFromCurrency) {\n    fromAmount = amount\n    toAmount = amount * exchangeRate \n  } else {\n    toAmount = amount\n    fromAmount = amount / exchangeRate || 0\n  }\n\n  useEffect(() => {\n    fetch(BASE_URL)\n      .then(res => res.json())\n      .then(data => {\n        console.log(data)\n        const firstCurrency = Object.keys(data.rates)[0]\n        setCurrencyOptions([data.base, ...Object.keys(data.rates)])\n        setFromCurrency(data.base)\n        setToCurrency(firstCurrency)\n        setExchangeRate(data.rates[firstCurrency])\n      })\n  }, [])\n\n  const dispatch = useDispatch()\n\n  useEffect(() => {\n    if (\n      fromCurrency === toCurrency &&\n      fromCurrency !== undefined &&\n      toCurrency !== undefined\n    ) {\n      setExchangeRate(6)\n      return\n    }\n\n    if (fromCurrency != null && toCurrency != null) {\n      fetch(`${BASE_URL}&base=${fromCurrency}&symbols=${toCurrency}`)\n        .then(res => res.json())\n        .then(data => setExchangeRate(data.rates[toCurrency]))\n    }\n\n        dispatch(saveSendAmount({fromAmount, toAmount, exchangeRate}))\n    \n  }, [dispatch, fromCurrency, toCurrency, fromAmount, toAmount, exchangeRate])\n\n  function handleFromAmountChange(e) {\n    setAmount(e.target.value)\n    setAmountInFromCurrency(true)\n  }\n\n  function handleToAmountChange(e) {\n    setAmount(e.target.value)\n    setAmountInFromCurrency(false)\n  }\n\n  \n\n  return (\n    <div className=\"text-center py-5\">\n    <Card >\n        <Card.Header as=\"h4\" >Currency Converter</Card.Header>\n            <Card.Body>\n              <h5>Sending</h5>\n                <CurrencyDisplay\n                        currencyOptions={currencyOptions}\n                        selectedCurrency={fromCurrency}\n                        onChangeCurrency={e => setFromCurrency(e.target.value)}\n                        onChangeAmount={handleFromAmountChange}\n                        amount={fromAmount}\n                    />\n                    <div className=\"equals py-3\">=</div>\n\n                    <h5>Receiver gets</h5>\n\n                    <p> 1 {`${fromCurrency}`} =  {`${exchangeRate}`}  {toCurrency}</p>\n\n                    {/* <SendCostModal fromCurrency={fromCurrency} exchangeRate={exchangeRate} toCurrency={toCurrency} /> */}\n\n                    <CurrencyDisplay \n                        currencyOptions={currencyOptions}\n                        selectedCurrency={toCurrency}\n                        onChangeCurrency={e => setToCurrency(e.target.value)}\n                        onChangeAmount={handleToAmountChange}\n                        amount={toAmount}\n                    />\n                    <LinkContainer className=\"py-2 mt-3\" to='/send/sendcost'>\n                      \n                        <Button variant=\"dark\"> Done</Button>\n                        \n                    </LinkContainer>\n                      \n            </Card.Body>\n            <Card.Footer className=\"text-muted\">Latest Exchange Rate</Card.Footer>\n    </Card>\n      \n      \n    </div>\n  );\n}\n\nexport default CurrencyConverter;"]},"metadata":{},"sourceType":"module"}