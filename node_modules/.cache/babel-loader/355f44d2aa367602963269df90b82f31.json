{"ast":null,"code":"var _jsxFileName = \"/Users/onesmusnyakotyo/earnedit/frontend/src/screens/PlaceOrderScreen.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Button, Row, Col, ListGroup, Card } from 'react-bootstrap';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Message from '../components/Message';\nimport { createOrder } from '../actions/orderActions'; //import { ORDER_CREATE_RESET } from '../constants/orderConstants'\n//import { USER_DETAILS_RESET } from '../constants/userConstants'\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst PlaceOrderScreen = () => {\n  _s();\n\n  const dispatch = useDispatch();\n  const order = useSelector(state => state.order); //   Calculate prices\n\n  const addDecimals = num => {\n    return (Math.round(num * 100) / 100).toFixed(2);\n  }; // order.sendAmount = addDecimals(\n  //   order.sendAmount.reduce((acc, item) => acc + item.sendAmount, 0)\n  // )\n\n\n  console.log('SENDAMOUNT', order.sendAmount);\n  order.shippingAmount = addDecimals(order.sendAmount.fromAmount * 0.10, 0);\n  order.totaAmount = (Number(order.sendAmount.fromAmount) + Number(order.shippingAmount)).toFixed(2); //cart.totalPrice = Number(cart.itemsPrice + cart.taxPrice).toFixed(2)\n\n  console.log('TOTAL AMOUNT', order.totaAmount);\n  const orderCreate = useSelector(state => state.orderCreate);\n  const {\n    placeorder,\n    success,\n    error\n  } = orderCreate;\n  useEffect(() => {\n    if (success) {\n      //history.push(`/order/${order._id}`)\n      //history.push('/payment')\n      console.log('Transaction: ', success);\n    } // eslint-disable-next-line\n\n  }, [history, success]);\n\n  const submitTransactionHandler = () => {\n    dispatch(createOrder({\n      orderAmount: order.sendAmount,\n      shippingAmount: order.shippingAmount,\n      //transaction fee\n      recipientAddress: order.recipientAddress,\n      totaAmount: order.totaAmount,\n      //transaction fee + fromAmount\n      exchangeRate: order.exchangeRate,\n      sendCountry: order.sendCountry\n    }));\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Row, {\n      children: [/*#__PURE__*/_jsxDEV(Col, {\n        md: 8,\n        children: /*#__PURE__*/_jsxDEV(ListGroup, {\n          variant: \"flush\",\n          children: [/*#__PURE__*/_jsxDEV(ListGroup.Item, {\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              children: \"Transaction Summary\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Address: \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 71,\n                columnNumber: 17\n              }, this), order.recipientAddress.firName, \", \", order.recipientAddress.middleName, \",\", ' ', \",\", order.recipientAddress.lastName, \",\", ' ', order.recipientAddress.address, \", \", order.recipientAddress.town, \",\", ' ', order.recipientAddress.email, \",\", ' ', order.recipientAddress.phone, \",\", ' ', order.recipientAddress.email, \",\", ' ', order.recipientAddress.country, order.recipientAddress.reason, \",\", ' ']\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              children: \"Payment Method\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Method: \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        md: 4,\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          children: /*#__PURE__*/_jsxDEV(ListGroup, {\n            variant: \"flush\",\n            children: [/*#__PURE__*/_jsxDEV(ListGroup.Item, {\n              children: /*#__PURE__*/_jsxDEV(\"h2\", {\n                children: \"Transaction Summary\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 131,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 130,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n              children: /*#__PURE__*/_jsxDEV(Row, {\n                children: [/*#__PURE__*/_jsxDEV(Col, {\n                  children: \"Paying\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 135,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Col, {\n                  children: [\"$\", order.fromAmount]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 136,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 134,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 133,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n              children: /*#__PURE__*/_jsxDEV(Row, {\n                children: [/*#__PURE__*/_jsxDEV(Col, {\n                  children: \"Transaction Fee\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 142,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Col, {\n                  children: [\"$\", order.shippingAmount]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 143,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 141,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 140,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n              children: /*#__PURE__*/_jsxDEV(Row, {\n                children: [/*#__PURE__*/_jsxDEV(Col, {\n                  children: \"Exchange Rate\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 149,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Col, {\n                  children: [\"1 EURO = \", order.exchangeRate]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 150,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 148,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 147,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n              children: /*#__PURE__*/_jsxDEV(Row, {\n                children: [/*#__PURE__*/_jsxDEV(Col, {\n                  children: \"Total\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 156,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Col, {\n                  children: [\"$\", order.totalAmount]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 157,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 155,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 154,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n              children: error && /*#__PURE__*/_jsxDEV(Message, {\n                variant: \"danger\",\n                children: error\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 162,\n                columnNumber: 43\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 161,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                type: \"button\",\n                className: \"btn-block\",\n                disabled: order.cartItems === 0,\n                onClick: submitTransactionHandler,\n                children: \"Submit Transaction\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 166,\n                columnNumber: 31\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 164,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n};\n\n_s(PlaceOrderScreen, \"oURaqjFgd3lrc1MaOcCzT0l6za4=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n\n_c = PlaceOrderScreen;\nexport default PlaceOrderScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"PlaceOrderScreen\");","map":{"version":3,"sources":["/Users/onesmusnyakotyo/earnedit/frontend/src/screens/PlaceOrderScreen.js"],"names":["React","useEffect","Link","Button","Row","Col","ListGroup","Card","useDispatch","useSelector","Message","createOrder","PlaceOrderScreen","dispatch","order","state","addDecimals","num","Math","round","toFixed","console","log","sendAmount","shippingAmount","fromAmount","totaAmount","Number","orderCreate","placeorder","success","error","history","submitTransactionHandler","orderAmount","recipientAddress","exchangeRate","sendCountry","firName","middleName","lastName","address","town","email","phone","country","reason","totalAmount","cartItems"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAASC,MAAT,EAAiBC,GAAjB,EAAsBC,GAAtB,EAA2BC,SAA3B,EAAqCC,IAArC,QAAiD,iBAAjD;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,OAAOC,OAAP,MAAoB,uBAApB;AACA,SAASC,WAAT,QAA4B,yBAA5B,C,CACA;AACA;;;;;AACA,MAAMC,gBAAgB,GAAG,MAAM;AAAA;;AAE1B,QAAMC,QAAQ,GAAGL,WAAW,EAA5B;AAEH,QAAMM,KAAK,GAAGL,WAAW,CAAEM,KAAD,IAAWA,KAAK,CAACD,KAAlB,CAAzB,CAJ6B,CAM5B;;AACD,QAAME,WAAW,GAAIC,GAAD,IAAS;AAC3B,WAAO,CAACC,IAAI,CAACC,KAAL,CAAWF,GAAG,GAAG,GAAjB,IAAwB,GAAzB,EAA8BG,OAA9B,CAAsC,CAAtC,CAAP;AACD,GAFD,CAP6B,CAW7B;AACA;AACA;;;AAEAC,EAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAAyBR,KAAK,CAACS,UAA/B;AAEAT,EAAAA,KAAK,CAACU,cAAN,GAAuBR,WAAW,CAACF,KAAK,CAACS,UAAN,CAAiBE,UAAjB,GAA8B,IAA/B,EAAqC,CAArC,CAAlC;AAEAX,EAAAA,KAAK,CAACY,UAAN,GAAmB,CACjBC,MAAM,CAACb,KAAK,CAACS,UAAN,CAAiBE,UAAlB,CAAN,GACAE,MAAM,CAACb,KAAK,CAACU,cAAP,CAFW,EAGfJ,OAHe,CAGP,CAHO,CAAnB,CAnB6B,CAwB5B;;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA2BR,KAAK,CAACY,UAAjC;AAID,QAAME,WAAW,GAAInB,WAAW,CAACM,KAAK,IAAIA,KAAK,CAACa,WAAhB,CAAhC;AACA,QAAM;AAAEC,IAAAA,UAAF;AAAcC,IAAAA,OAAd;AAAuBC,IAAAA;AAAvB,MAAiCH,WAAvC;AAEA3B,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAG6B,OAAH,EAAY;AACR;AACA;AACAT,MAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA4BQ,OAA5B;AACD,KALS,CAMV;;AACH,GAPM,EAOJ,CAACE,OAAD,EAASF,OAAT,CAPI,CAAT;;AASA,QAAMG,wBAAwB,GAAG,MAAM;AACrCpB,IAAAA,QAAQ,CAACF,WAAW,CAAC;AACjBuB,MAAAA,WAAW,EAAEpB,KAAK,CAACS,UADF;AAEjBC,MAAAA,cAAc,EAAEV,KAAK,CAACU,cAFL;AAEqB;AACtCW,MAAAA,gBAAgB,EAAErB,KAAK,CAACqB,gBAHP;AAIjBT,MAAAA,UAAU,EAAEZ,KAAK,CAACY,UAJD;AAIa;AAC9BU,MAAAA,YAAY,EAAEtB,KAAK,CAACsB,YALH;AAMjBC,MAAAA,WAAW,EAAEvB,KAAK,CAACuB;AANF,KAAD,CAAZ,CAAR;AAQD,GATD;;AAYE,sBACE;AAAA,2BAEE,QAAC,GAAD;AAAA,8BACI,QAAC,GAAD;AAAK,QAAA,EAAE,EAAE,CAAT;AAAA,+BACA,QAAC,SAAD;AAAW,UAAA,OAAO,EAAC,OAAnB;AAAA,kCACA,QAAC,SAAD,CAAW,IAAX;AAAA,oCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eAEE;AAAA,sCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,EAEGvB,KAAK,CAACqB,gBAAN,CAAuBG,OAF1B,QAEqCxB,KAAK,CAACqB,gBAAN,CAAuBI,UAF5D,OAEyE,GAFzE,OAGGzB,KAAK,CAACqB,gBAAN,CAAuBK,QAH1B,OAGqC,GAHrC,EAIG1B,KAAK,CAACqB,gBAAN,CAAuBM,OAJ1B,QAIqC3B,KAAK,CAACqB,gBAAN,CAAuBO,IAJ5D,OAImE,GAJnE,EAKG5B,KAAK,CAACqB,gBAAN,CAAuBQ,KAL1B,OAKkC,GALlC,EAMG7B,KAAK,CAACqB,gBAAN,CAAuBS,KAN1B,OAMkC,GANlC,EAOG9B,KAAK,CAACqB,gBAAN,CAAuBQ,KAP1B,OAOkC,GAPlC,EAQG7B,KAAK,CAACqB,gBAAN,CAAuBU,OAR1B,EASG/B,KAAK,CAACqB,gBAAN,CAAuBW,MAT1B,OASmC,GATnC;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,kBADA,eAgBA,QAAC,SAAD,CAAW,IAAX;AAAA,oCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,kBAhBA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,cADJ,eA8DQ,QAAC,GAAD;AAAK,QAAA,EAAE,EAAE,CAAT;AAAA,+BACI,QAAC,IAAD;AAAA,iCACI,QAAC,SAAD;AAAW,YAAA,OAAO,EAAC,OAAnB;AAAA,oCACI,QAAC,SAAD,CAAW,IAAX;AAAA,qCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,oBADJ,eAII,QAAC,SAAD,CAAW,IAAX;AAAA,qCACI,QAAC,GAAD;AAAA,wCACI,QAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADJ,eAEI,QAAC,GAAD;AAAA,kCAAOhC,KAAK,CAACW,UAAb;AAAA;AAAA;AAAA;AAAA;AAAA,wBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,oBAJJ,eAWI,QAAC,SAAD,CAAW,IAAX;AAAA,qCACI,QAAC,GAAD;AAAA,wCACI,QAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADJ,eAEI,QAAC,GAAD;AAAA,kCAAOX,KAAK,CAACU,cAAb;AAAA;AAAA;AAAA;AAAA;AAAA,wBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,oBAXJ,eAkBI,QAAC,SAAD,CAAW,IAAX;AAAA,qCACI,QAAC,GAAD;AAAA,wCACI,QAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADJ,eAEI,QAAC,GAAD;AAAA,0CAAeV,KAAK,CAACsB,YAArB;AAAA;AAAA;AAAA;AAAA;AAAA,wBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,oBAlBJ,eAyBI,QAAC,SAAD,CAAW,IAAX;AAAA,qCACI,QAAC,GAAD;AAAA,wCACI,QAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADJ,eAEI,QAAC,GAAD;AAAA,kCAAOtB,KAAK,CAACiC,WAAb;AAAA;AAAA;AAAA;AAAA;AAAA,wBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,oBAzBJ,eAgCI,QAAC,SAAD,CAAW,IAAX;AAAA,wBACKhB,KAAK,iBAAI,QAAC,OAAD;AAAS,gBAAA,OAAO,EAAC,QAAjB;AAAA,0BAA2BA;AAA3B;AAAA;AAAA;AAAA;AAAA;AADd;AAAA;AAAA;AAAA;AAAA,oBAhCJ,eAmCI,QAAC,SAAD,CAAW,IAAX;AAAA,qCAEE,QAAC,MAAD;AAAQ,gBAAA,IAAI,EAAC,QAAb;AAAsB,gBAAA,SAAS,EAAC,WAAhC;AAA4C,gBAAA,QAAQ,EAAEjB,KAAK,CAACkC,SAAN,KAAoB,CAA1E;AACE,gBAAA,OAAO,EAAEf,wBADX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAFF;AAAA;AAAA;AAAA;AAAA,oBAnCJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cA9DR;AAAA;AAAA;AAAA;AAAA;AAAA;AAFF,mBADF;AAsHH,CA3KD;;GAAMrB,gB;UAEgBJ,W,EAENC,W,EAyBOA,W;;;KA7BjBG,gB;AA6KN,eAAeA,gBAAf","sourcesContent":["import React, { useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport { Button, Row, Col, ListGroup,Card } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Message from '../components/Message'\nimport { createOrder } from '../actions/orderActions'\n//import { ORDER_CREATE_RESET } from '../constants/orderConstants'\n//import { USER_DETAILS_RESET } from '../constants/userConstants'\nconst PlaceOrderScreen = () => {\n\n     const dispatch = useDispatch()\n\n  const order = useSelector((state) => state.order)\n\n   //   Calculate prices\n  const addDecimals = (num) => {\n    return (Math.round(num * 100) / 100).toFixed(2)\n  }\n\n  // order.sendAmount = addDecimals(\n  //   order.sendAmount.reduce((acc, item) => acc + item.sendAmount, 0)\n  // )\n\n  console.log('SENDAMOUNT',order.sendAmount )\n\n  order.shippingAmount = addDecimals(order.sendAmount.fromAmount * 0.10, 0)\n\n  order.totaAmount = (\n    Number(order.sendAmount.fromAmount) +\n    Number(order.shippingAmount )\n    ).toFixed(2)\n\n   //cart.totalPrice = Number(cart.itemsPrice + cart.taxPrice).toFixed(2)\n   console.log('TOTAL AMOUNT',order.totaAmount )\n    \n  \n\n  const orderCreate =  useSelector(state => state.orderCreate)\n  const { placeorder, success, error } = orderCreate\n\n  useEffect(() => {\n      if(success) {\n          //history.push(`/order/${order._id}`)\n          //history.push('/payment')\n          console.log('Transaction: ',success)\n        } \n        // eslint-disable-next-line\n    }, [history,success])\n\n  const submitTransactionHandler = () => {\n    dispatch(createOrder({\n        orderAmount: order.sendAmount,\n        shippingAmount: order.shippingAmount, //transaction fee\n        recipientAddress: order.recipientAddress,\n        totaAmount: order.totaAmount, //transaction fee + fromAmount\n        exchangeRate: order.exchangeRate,\n        sendCountry: order.sendCountry\n    }))\n  }\n  \n\n    return (\n      <>\n          \n        <Row>\n            <Col md={8}>\n            <ListGroup variant='flush'>\n            <ListGroup.Item>\n              <h2>Transaction Summary</h2>\n              <p>\n                <strong>Address: </strong>\n                {order.recipientAddress.firName}, {order.recipientAddress.middleName},{' '},\n                {order.recipientAddress.lastName},{' '}\n                {order.recipientAddress.address}, {order.recipientAddress.town},{' '}\n                {order.recipientAddress.email},{' '}\n                {order.recipientAddress.phone},{' '}\n                {order.recipientAddress.email},{' '}\n                {order.recipientAddress.country}\n                {order.recipientAddress.reason},{' '}\n              </p>\n            </ListGroup.Item>\n\n            <ListGroup.Item>\n              <h2>Payment Method</h2>\n              <strong>Method: </strong>\n              {/* {order.paymentMethod} */}\n            </ListGroup.Item>\n\n            {/* <ListGroup.Item>\n              <h2>Transaction</h2> */}\n              {/* {order.orderItems.length === 0 ? (\n                <Message>Your order is empty</Message>\n              ) :  */}\n              {/* </ListGroup>( */}\n                {/* <ListGroup variant='flush'> */}\n                  {/* {order.orderItems.map((item, index) => (\n                    <ListGroup.Item key={index}>\n                      <Row>\n                        <Col md={1}>\n                          <Image\n                            src={item.image}\n                            alt={item.name}\n                            fluid\n                            rounded\n                          />\n                        </Col>\n                        <Col>\n                          <Link to={`/product/${item.product}`}>\n                            {item.name}\n                          </Link>\n                        </Col>\n                        <Col md={4}>\n                          {item.qty} x ${item.price} = ${item.qty * item.price}\n                        </Col>\n                      </Row>\n                    </ListGroup.Item>\n                  ))} */}\n                            {/* </ListGroup>\n                        )} */}\n                        {/* </ListGroup.Item>\n\n                    </ListGroup>\n                        </Col> */}\n                </ListGroup>\n                </Col>\n\n                <Col md={4}>\n                    <Card>\n                        <ListGroup variant='flush'>\n                            <ListGroup.Item>\n                                <h2>Transaction Summary</h2>\n                            </ListGroup.Item>\n                            <ListGroup.Item>\n                                <Row>\n                                    <Col>Paying</Col>\n                                    <Col>${order.fromAmount}</Col>\n                                </Row>\n\n                            </ListGroup.Item>\n                            <ListGroup.Item>\n                                <Row>\n                                    <Col>Transaction Fee</Col>\n                                    <Col>${order.shippingAmount}</Col>\n                                </Row>\n\n                            </ListGroup.Item>\n                            <ListGroup.Item>\n                                <Row>\n                                    <Col>Exchange Rate</Col>\n                                    <Col>1 EURO = {order.exchangeRate}</Col>\n                                </Row>\n\n                            </ListGroup.Item>\n                            <ListGroup.Item>\n                                <Row>\n                                    <Col>Total</Col>\n                                    <Col>${order.totalAmount}</Col>\n                                </Row>\n\n                            </ListGroup.Item>\n                            <ListGroup.Item>\n                                {error && <Message variant='danger'>{error}</Message>}\n                            </ListGroup.Item>\n                            <ListGroup.Item>\n                              {/* <Button type='button' className='btn-block' disabled={order.cartItems === 0 } */}\n                              <Button type='button' className='btn-block' disabled={order.cartItems === 0 }\n                                onClick={submitTransactionHandler}>Submit Transaction</Button>\n\n                            </ListGroup.Item>\n\n                        </ListGroup>\n                    </Card>\n                </Col>\n      </Row>\n    </>\n  )\n\n\n  \n}\n\nexport default PlaceOrderScreen\n"]},"metadata":{},"sourceType":"module"}