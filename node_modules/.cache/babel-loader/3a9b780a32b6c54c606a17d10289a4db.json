{"ast":null,"code":"var _jsxFileName = \"/Users/onesmusnyakotyo/earnedit/frontend/src/screens/OrderMyListScreen.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { LinkContainer } from 'react-router-bootstrap';\nimport { Table, Button } from 'react-bootstrap';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Message from '../components/Message';\nimport Loader from '../components/Loader';\nimport { listMyOrders } from '../actions/orderActions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst OrderMyListScreen = ({\n  history\n}) => {\n  _s();\n\n  const dispatch = useDispatch();\n  const orderListMy = useSelector(state => state.orderListMy);\n  const {\n    loading,\n    error,\n    orders\n  } = orderListMy;\n  const userLogin = useSelector(state => state.userLogin);\n  const {\n    userInfo\n  } = userLogin;\n  useEffect(() => {\n    if (userInfo) {\n      dispatch(listMyOrders());\n    } else {\n      history.push('/login');\n    }\n  }, [dispatch, history, userInfo]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Orders\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), loading ? /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }, this) : error ? /*#__PURE__*/_jsxDEV(Message, {\n      variant: \"danger\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(Table, {\n      striped: true,\n      bordered: true,\n      hover: true,\n      responsive: true,\n      className: \"table-sm\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"ID\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"USER\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"DATE\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"TOTAL\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: orders.map(order => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: order._id\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: order.user && order.user.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: order.createdAt.substring(0, 10)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: [\"$\", order.orderAmount.toAmount]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: [\"$\", order.orderAmount.totalAmount]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: order.recipientAddress.firstName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: order.recipientAddress.lastName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: order.recipientAddress.country\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 17\n          }, this)]\n        }, order._id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n\n_s(OrderMyListScreen, \"TRkf48XmhqkwVbz04AJEpwKXhF8=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n\n_c = OrderMyListScreen;\nexport default OrderMyListScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"OrderMyListScreen\");","map":{"version":3,"sources":["/Users/onesmusnyakotyo/earnedit/frontend/src/screens/OrderMyListScreen.js"],"names":["React","useEffect","LinkContainer","Table","Button","useDispatch","useSelector","Message","Loader","listMyOrders","OrderMyListScreen","history","dispatch","orderListMy","state","loading","error","orders","userLogin","userInfo","push","map","order","_id","user","name","createdAt","substring","orderAmount","toAmount","totalAmount","recipientAddress","firstName","lastName","country"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react'\nimport { LinkContainer } from 'react-router-bootstrap'\nimport {  Table, Button } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Message from '../components/Message'\nimport Loader from '../components/Loader'\nimport { listMyOrders} from '../actions/orderActions'\n\nconst OrderMyListScreen = ({ history }) => {\n  const dispatch = useDispatch()\n\n  const orderListMy = useSelector((state) => state.orderListMy)\n  const { loading, error, orders } = orderListMy\n  \n\n  const userLogin = useSelector((state) => state.userLogin)\n  const { userInfo } = userLogin\n\n  useEffect(() => {\n    if (userInfo) {\n      dispatch(listMyOrders())\n    } else {\n      history.push('/login')\n    }\n  }, [dispatch, history, userInfo])\n\n  return (\n    <>\n      \n      <h1>Orders</h1>\n      {loading ? (\n        <Loader />\n      ) : error ? (\n        <Message variant='danger'>{error}</Message>\n      ) : (\n        \n        <Table striped bordered hover responsive className='table-sm'>\n          <thead>\n            <tr>\n              <th>ID</th>\n              <th>USER</th>\n              <th>DATE</th>\n              <th>TOTAL</th>\n              {/* <th>PAID</th>\n              <th>DELIVERED</th> */}\n              <th></th>\n            </tr>\n          </thead>\n          <tbody>\n            {orders.map((order) => (\n              <tr key={order._id}>\n                <td>{order._id}</td>\n                <td>{order.user && order.user.name}</td>\n                <td>{order.createdAt.substring(0, 10)}</td>\n                <td>${order.orderAmount.toAmount}</td>\n                <td>${order.orderAmount.totalAmount}</td>\n                <td>{order.recipientAddress.firstName}</td>\n                <td>{order.recipientAddress.lastName}</td>\n                <td>{order.recipientAddress.country}</td>\n                {/* <td>\n                  {order && order.isPaid ? (\n                    order.paidAt.substring(0, 10) \n                  ) : (\n                    <i className='fas fa-times' style={{ color: 'red' }}></i>\n                  )}\n                </td> */}\n                {/* <td>\n                  {order && order.isDelivered ? (\n                    order.deliveredAt.substring(0, 10)\n                  ) : (\n                    <i className='fas fa-times' style={{ color: 'red' }}></i>\n                  )}\n                </td> */}\n                {/* <td>\n                  <LinkContainer to={`/order/${order._id}`}>\n                    <Button variant='light' className='btn-sm'>\n                      Details\n                    </Button>\n                  </LinkContainer>\n                </td> */}\n              </tr>\n            ))}\n          </tbody>\n\n        </Table>\n        \n      )}\n      \n    </>\n  )\n}\n\nexport default OrderMyListScreen"]},"metadata":{},"sourceType":"module"}