{"ast":null,"code":"import { createStore, combineReducers, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension'; //import  { productListReducer, productDetailsReducer, productDeleteReducer, productCreateReducer, productUpdateReducer, productReviewCreateReducer, productTopRatedReducer   }  from './reducers/productReducers.js'\n//import { cartReducer } from './reducers/cartReducers'\n\nimport { userLoginReducer, userRegisterReducer } from './reducers/userReducers';\nimport { ordersendCountryReducer } from './reducers/orderReducers';\nconst reducer = combineReducers({\n  userLogin: userLoginReducer,\n  userRegister: userRegisterReducer,\n  order: ordersendCountryReducer\n}); // RETREIVING USER FROM STORAGE\n\nconst userInfoFromStorage = localStorage.getItem('userInfo') ? JSON.parse(localStorage.getItem('userInfo')) : null; // RETREIVING USER FROM STORAGE\n\nconst sendCountryFromStorage = localStorage.getItem('sendCountry') ? JSON.parse(localStorage.getItem('sendCountry')) : {}; // INITIAL STATE\n\nconst initialState = {\n  order: {\n    //sendAmount: sendAmountFromStorage,\n    sendCountry: sendCountryFromStorage\n  },\n  userLogin: {\n    userInfo: userInfoFromStorage\n  }\n};\nconst middleware = [thunk];\nconst store = createStore(reducer, initialState, composeWithDevTools(applyMiddleware(...middleware)));\nexport default store;","map":{"version":3,"sources":["/Users/onesmusnyakotyo/earnedit/frontend/src/store.js"],"names":["createStore","combineReducers","applyMiddleware","thunk","composeWithDevTools","userLoginReducer","userRegisterReducer","ordersendCountryReducer","reducer","userLogin","userRegister","order","userInfoFromStorage","localStorage","getItem","JSON","parse","sendCountryFromStorage","initialState","sendCountry","userInfo","middleware","store"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,EAAuCC,eAAvC,QAA8D,OAA9D;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,SAASC,mBAAT,QAAoC,0BAApC,C,CACA;AACA;;AACA,SAASC,gBAAT,EAA2BC,mBAA3B,QAAqD,yBAArD;AACA,SAASC,uBAAT,QAAuC,0BAAvC;AAGA,MAAMC,OAAO,GAAGP,eAAe,CAAC;AAC5BQ,EAAAA,SAAS,EAAEJ,gBADiB;AAE/BK,EAAAA,YAAY,EAAEJ,mBAFiB;AAG/BK,EAAAA,KAAK,EAAEJ;AAHwB,CAAD,CAA/B,C,CAMA;;AACA,MAAMK,mBAAmB,GAAGC,YAAY,CAACC,OAAb,CAAqB,UAArB,IACzBC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,UAArB,CAAX,CADyB,GAEzB,IAFH,C,CAKA;;AACA,MAAMG,sBAAsB,GAAGJ,YAAY,CAACC,OAAb,CAAqB,aAArB,IAC3BC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,aAArB,CAAX,CAD2B,GAE3B,EAFJ,C,CAIA;;AACA,MAAMI,YAAY,GAAG;AACpBP,EAAAA,KAAK,EAAE;AACN;AACAQ,IAAAA,WAAW,EAAEF;AAFP,GADa;AAKpBR,EAAAA,SAAS,EAAE;AACVW,IAAAA,QAAQ,EAAER;AADA;AALS,CAArB;AAYA,MAAMS,UAAU,GAAG,CAAClB,KAAD,CAAnB;AAEA,MAAMmB,KAAK,GAAGtB,WAAW,CAACQ,OAAD,EAAUU,YAAV,EAAwBd,mBAAmB,CAACF,eAAe,CAAC,GAAGmB,UAAJ,CAAhB,CAA3C,CAAzB;AAEA,eAAeC,KAAf","sourcesContent":["import { createStore, combineReducers, applyMiddleware } from 'redux'\nimport thunk from 'redux-thunk'\nimport { composeWithDevTools } from 'redux-devtools-extension'\n//import  { productListReducer, productDetailsReducer, productDeleteReducer, productCreateReducer, productUpdateReducer, productReviewCreateReducer, productTopRatedReducer   }  from './reducers/productReducers.js'\n//import { cartReducer } from './reducers/cartReducers'\nimport { userLoginReducer, userRegisterReducer} from './reducers/userReducers'\nimport { ordersendCountryReducer} from './reducers/orderReducers'\n\n\nconst reducer = combineReducers({\n    userLogin: userLoginReducer,\n\tuserRegister: userRegisterReducer,\n\torder: ordersendCountryReducer\n})\n\n// RETREIVING USER FROM STORAGE\nconst userInfoFromStorage = localStorage.getItem('userInfo')\n\t? JSON.parse(localStorage.getItem('userInfo'))\n\t: null\n\n\n// RETREIVING USER FROM STORAGE\nconst sendCountryFromStorage = localStorage.getItem('sendCountry')\n  ? JSON.parse(localStorage.getItem('sendCountry'))\n  : {}\n\n// INITIAL STATE\nconst initialState = {\n\torder: {\n\t\t//sendAmount: sendAmountFromStorage,\n\t\tsendCountry: sendCountryFromStorage,\n\t},\n\tuserLogin: {\n\t\tuserInfo: userInfoFromStorage,\n\t},\n\n}\n\n\nconst middleware = [thunk]\n\nconst store = createStore(reducer, initialState, composeWithDevTools(applyMiddleware(...middleware)))\n\nexport default store"]},"metadata":{},"sourceType":"module"}