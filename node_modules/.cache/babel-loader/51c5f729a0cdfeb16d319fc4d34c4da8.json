{"ast":null,"code":"import { USER_LOGOUT, USER_LOGIN_FAIL, USER_LOGIN_REQUEST, USER_LOGIN_SUCCESS, USER_REGISTER_FAIL, USER_REGISTER_REQUEST, USER_REGISTER_SUCCESS, USER_DETAILS_REQUEST, USER_DETAILS_FAIL, USER_UPDATE_PROFILE_REQUEST, USER_UPDATE_PROFILE_SUCCESS, USER_UPDATE_PROFILE_FAIL, USER_LIST_REQUEST, USER_LIST_SUCCESS, USER_LIST_FAIL, USER_DELETE_REQUEST, USER_DELETE_SUCCESS, USER_DELETE_FAIL, USER_UPDATE_REQUEST, USER_UPDATE_SUCCESS, USER_UPDATE_FAIL, USER_DETAILS_RESET, USER_DETAILS_SUCCESS } from \"../constants/userConstants\";\nimport axios from 'axios'; //import { ORDER_LIST_MY_RESET } from \"../constants/orderConstants\"\n\nexport const login = (email, password) => async dispatch => {\n  try {\n    dispatch({\n      type: USER_LOGIN_REQUEST\n    });\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n    const {\n      data\n    } = await axios.post('/api/users/login', {\n      email,\n      password\n    }, config);\n    dispatch({\n      type: USER_LOGIN_SUCCESS,\n      payload: data\n    });\n    localStorage.setItem('userInfo', JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      type: USER_LOGIN_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const register = (name, email, password) => async dispatch => {\n  try {\n    dispatch({\n      type: USER_REGISTER_REQUEST\n    });\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n    const {\n      data\n    } = await axios.post('/api/users/register', {\n      name,\n      email,\n      password\n    }, config);\n    dispatch({\n      type: USER_REGISTER_SUCCESS,\n      payload: data\n    });\n    dispatch({\n      type: USER_LOGIN_SUCCESS,\n      payload: data\n    });\n    localStorage.setItem('userInfo', JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      type: USER_REGISTER_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const logout = () => dispatch => {\n  localStorage.removeItem('userInfo');\n  dispatch({\n    type: USER_LOGOUT\n  });\n  dispatch({\n    type: USER_DETAILS_RESET\n  }); // dispatch({type: ORDER_LIST_MY_RESET})\n\n  dispatch({\n    type: USER_LIST_RESET\n  });\n};\nexport const getUserDetails = id => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: USER_DETAILS_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.get(`/api/users/${id}`, config);\n    dispatch({\n      type: USER_DETAILS_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: USER_DETAILS_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const updateUserProfile = user => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: USER_UPDATE_PROFILE_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.put(`/api/users/profile`, user, config);\n    dispatch({\n      type: USER_UPDATE_PROFILE_SUCCESS,\n      payload: data\n    });\n    dispatch({\n      type: USER_LOGIN_SUCCESS,\n      payload: data\n    });\n    localStorage.setItem('userInfo', JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      type: USER_UPDATE_PROFILE_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const listUsers = () => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: USER_LIST_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.get(`/api/users`, config);\n    dispatch({\n      type: USER_LIST_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    const message = error.response && error.response.data.message ? error.response.data.message : error.message;\n\n    if (message === 'Not authorized, token failed') {\n      dispatch(logout());\n    }\n\n    dispatch({\n      type: USER_LIST_FAIL,\n      payload: message\n    });\n  }\n};\nexport const deleteUser = id => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: USER_DELETE_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    await axios.delete(`/api/users/${id}`, config);\n    dispatch({\n      type: USER_DELETE_SUCCESS\n    });\n  } catch (error) {\n    const message = error.response && error.response.data.message ? error.response.data.message : error.message;\n\n    if (message === 'Not authorized, token failed') {\n      dispatch(logout());\n    }\n\n    dispatch({\n      type: USER_DELETE_FAIL,\n      payload: message\n    });\n  }\n};\nexport const updateUser = user => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: USER_UPDATE_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.put(`/api/users/${user._id}`, user, config);\n    dispatch({\n      type: USER_UPDATE_SUCCESS\n    });\n    dispatch({\n      type: USER_DETAILS_SUCCESS,\n      payload: data\n    });\n    dispatch({\n      type: USER_DETAILS_RESET\n    });\n  } catch (error) {\n    const message = error.response && error.response.data.message ? error.response.data.message : error.message;\n\n    if (message === 'Not authorized, token failed') {\n      dispatch(logout());\n    }\n\n    dispatch({\n      type: USER_UPDATE_FAIL,\n      payload: message\n    });\n  }\n};","map":{"version":3,"sources":["/Users/onesmusnyakotyo/earnedit/frontend/src/actions/userActions.js"],"names":["USER_LOGOUT","USER_LOGIN_FAIL","USER_LOGIN_REQUEST","USER_LOGIN_SUCCESS","USER_REGISTER_FAIL","USER_REGISTER_REQUEST","USER_REGISTER_SUCCESS","USER_DETAILS_REQUEST","USER_DETAILS_FAIL","USER_UPDATE_PROFILE_REQUEST","USER_UPDATE_PROFILE_SUCCESS","USER_UPDATE_PROFILE_FAIL","USER_LIST_REQUEST","USER_LIST_SUCCESS","USER_LIST_FAIL","USER_DELETE_REQUEST","USER_DELETE_SUCCESS","USER_DELETE_FAIL","USER_UPDATE_REQUEST","USER_UPDATE_SUCCESS","USER_UPDATE_FAIL","USER_DETAILS_RESET","USER_DETAILS_SUCCESS","axios","login","email","password","dispatch","type","config","headers","data","post","payload","localStorage","setItem","JSON","stringify","error","response","message","register","name","logout","removeItem","USER_LIST_RESET","getUserDetails","id","getState","userLogin","userInfo","Authorization","token","get","updateUserProfile","user","put","listUsers","deleteUser","delete","updateUser","_id"],"mappings":"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","sourcesContent":["import { USER_LOGOUT, USER_LOGIN_FAIL, USER_LOGIN_REQUEST, USER_LOGIN_SUCCESS, USER_REGISTER_FAIL, USER_REGISTER_REQUEST, USER_REGISTER_SUCCESS,\n    USER_DETAILS_REQUEST, USER_DETAILS_FAIL, USER_UPDATE_PROFILE_REQUEST, USER_UPDATE_PROFILE_SUCCESS, USER_UPDATE_PROFILE_FAIL, USER_LIST_REQUEST,\n    USER_LIST_SUCCESS, USER_LIST_FAIL, USER_DELETE_REQUEST, USER_DELETE_SUCCESS, USER_DELETE_FAIL, USER_UPDATE_REQUEST, \n    USER_UPDATE_SUCCESS, USER_UPDATE_FAIL, USER_DETAILS_RESET, USER_DETAILS_SUCCESS,\n} from \"../constants/userConstants\"\nimport axios from 'axios'\n//import { ORDER_LIST_MY_RESET } from \"../constants/orderConstants\"\n\nexport const login = (email, password ) => async (dispatch) => {\n    try {\n        dispatch({\n            type: USER_LOGIN_REQUEST\n        })\n\n        const config = {\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        }\n\n        const { data } = await axios.post('/api/users/login', { email, password }, config)\n\n        dispatch({\n            type: USER_LOGIN_SUCCESS,\n            payload: data\n        })\n\n        localStorage.setItem('userInfo', JSON.stringify(data) )\n\n    } catch(error){\n        dispatch({\n                        type: USER_LOGIN_FAIL,\n                        payload: error.response && error.response.data.message ? \n                        error.response.data.message\n                        : error.message\n                    })\n    }\n\n    \n}\n\n\nexport const register = (name, email, password ) => async (dispatch) => {\n    try {\n        dispatch({\n            type: USER_REGISTER_REQUEST\n        })\n\n        const config = {\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        }\n\n        const { data } = await axios.post('/api/users/register', { name, email, password }, config)\n\n        dispatch({\n            type: USER_REGISTER_SUCCESS,\n            payload: data\n        })\n\n         dispatch({\n            type: USER_LOGIN_SUCCESS,\n            payload: data\n        })\n\n        localStorage.setItem('userInfo', JSON.stringify(data) )\n\n    } catch(error){\n        dispatch({\n                        type: USER_REGISTER_FAIL,\n                        payload: error.response && error.response.data.message ? \n                        error.response.data.message\n                        : error.message\n                    })\n    }\n\n}\n\nexport const logout = () => (dispatch) => {\n        localStorage.removeItem('userInfo')\n        dispatch({type: USER_LOGOUT})\n        dispatch({type: USER_DETAILS_RESET})\n        // dispatch({type: ORDER_LIST_MY_RESET})\n        dispatch({type: USER_LIST_RESET})\n    }\n\n export const getUserDetails = (id) => async (dispatch, getState) => {\n        try {\n            dispatch({\n                type: USER_DETAILS_REQUEST\n            })\n\n            const { userLogin: { userInfo } } = getState()\n\n            const config = {\n                headers: {\n                    'Content-Type': 'application/json',\n                    Authorization: `Bearer ${userInfo.token}`\n                }\n            }\n\n            const { data } = await axios.get(`/api/users/${id}`, config)\n\n            dispatch({\n                type: USER_DETAILS_SUCCESS,\n                payload: data\n            })\n\n            \n\n       \n\n        } catch(error){\n            dispatch({\n                            type: USER_DETAILS_FAIL,\n                            payload: error.response && error.response.data.message ? \n                            error.response.data.message\n                            : error.message\n                        })\n        }\n\n    \n}\n\n export const updateUserProfile = (user) => async (dispatch, getState) => {\n        try {\n            dispatch({\n                type: USER_UPDATE_PROFILE_REQUEST\n            })\n\n            const { userLogin: { userInfo } } = getState()\n\n            const config = {\n                headers: {\n                    'Content-Type': 'application/json',\n                    Authorization: `Bearer ${userInfo.token}`\n                }\n            }\n\n            const { data } = await axios.put(`/api/users/profile`, user,  config)\n\n            dispatch({\n                type: USER_UPDATE_PROFILE_SUCCESS,\n                payload: data\n            })\n\n            dispatch({\n                type: USER_LOGIN_SUCCESS,\n                payload: data,\n            })\n\n            localStorage.setItem('userInfo', JSON.stringify(data))\n\n            \n\n       \n\n        } catch(error){\n            dispatch({\n                            type: USER_UPDATE_PROFILE_FAIL,\n                            payload: error.response && error.response.data.message ? \n                            error.response.data.message\n                            : error.message\n                        })\n        }\n\n    \n}\n\n\n\n export const listUsers = () => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: USER_LIST_REQUEST,\n    })\n\n    const {\n      userLogin: { userInfo },\n    } = getState()\n\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    }\n\n    const { data } = await axios.get(`/api/users`, config)\n\n    dispatch({\n      type: USER_LIST_SUCCESS,\n      payload: data,\n    })\n  } catch (error) {\n    const message =\n      error.response && error.response.data.message\n        ? error.response.data.message\n        : error.message\n    if (message === 'Not authorized, token failed') {\n      dispatch(logout())\n    }\n    dispatch({\n      type: USER_LIST_FAIL,\n      payload: message,\n    })\n  }\n}\n\nexport const deleteUser = (id) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: USER_DELETE_REQUEST,\n    })\n\n    const {\n      userLogin: { userInfo },\n    } = getState()\n\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    }\n\n    await axios.delete(`/api/users/${id}`, config)\n\n    dispatch({ type: USER_DELETE_SUCCESS })\n  } catch (error) {\n    const message =\n      error.response && error.response.data.message\n        ? error.response.data.message\n        : error.message\n    if (message === 'Not authorized, token failed') {\n      dispatch(logout())\n    }\n    dispatch({\n      type: USER_DELETE_FAIL,\n      payload: message,\n    })\n  }\n}\n\nexport const updateUser = (user) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: USER_UPDATE_REQUEST,\n    })\n\n    const {\n      userLogin: { userInfo },\n    } = getState()\n\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    }\n\n    const { data } = await axios.put(`/api/users/${user._id}`, user, config)\n\n    dispatch({ type: USER_UPDATE_SUCCESS })\n\n    dispatch({ type: USER_DETAILS_SUCCESS, payload: data })\n\n    dispatch({ type: USER_DETAILS_RESET })\n  } catch (error) {\n    const message =\n      error.response && error.response.data.message\n        ? error.response.data.message\n        : error.message\n    if (message === 'Not authorized, token failed') {\n      dispatch(logout())\n    }\n    dispatch({\n      type: USER_UPDATE_FAIL,\n      payload: message,\n    })\n  }\n}"]},"metadata":{},"sourceType":"module"}