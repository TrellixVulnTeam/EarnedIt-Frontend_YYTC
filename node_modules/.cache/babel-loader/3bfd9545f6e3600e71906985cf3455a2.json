{"ast":null,"code":"import { ORDER_SAVE_SEND_COUNTRY, ORDER_AMOUNT } from '../constants/orderConstants';\nimport axios from 'axios'; // export const saveSendCountry = (value) => (dispatch) => {\n//     console.log('Back', value)\n//   dispatch({\n//     type: ORDER_SAVE_SEND_COUNTRY,\n//     payload: value\n//   })\n//   localStorage.setItem('sendCountry', JSON.stringify(value))\n// }\n\nexport const saveSendCountry = value => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: ORDER_SAVE_SEND_COUNTRY\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.put('/api/orders', value, config);\n    dispatch({\n      type: ORDER_SAVE_SEND_COUNTRY,\n      payload: data\n    });\n    localStorage.setItem('sendCountry', JSON.stringify(data));\n  } catch (error) {\n    const message = error.response && error.response.data.message ? error.response.data.message : error.message;\n\n    if (message === 'Not authorized, token failed') {\n      dispatch(logout());\n    } // dispatch({\n    //   type: ORDER_PAY_FAIL,\n    //   payload: message,\n    // })\n\n  }\n}; // export const saveSendAmount = (value, getState) => (dispatch) =>  {\n//     console.log('Back Amount', value)\n//     const {\n//       userLogin: { userInfo },\n//     } = getState()\n//     const config = {\n//       headers: {\n//         'Content-Type': 'application/json',\n//         Authorization: `Bearer ${userInfo.token}`,\n//       },\n//     }\n//       const { data } = await axios.put(\n//       `/api/orders`,\n//       value,\n//       config\n//     )\n//   dispatch({\n//     type: ORDER_AMOUNT,\n//     payload: data\n//   })\n//   localStorage.setItem('sendAmount', JSON.stringify(data))\n// }\n\nexport const saveSendAmount = value => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: ORDER_AMOUNT\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.put('/api/orders', value, config);\n    dispatch({\n      type: ORDER_AMOUNT,\n      payload: data\n    });\n    localStorage.setItem('sendAmount', JSON.stringify(data));\n  } catch (error) {\n    const message = error.response && error.response.data.message ? error.response.data.message : error.message;\n\n    if (message === 'Not authorized, token failed') {\n      dispatch(logout());\n    } // dispatch({\n    //   type: ORDER_PAY_FAIL,\n    //   payload: message,\n    // })\n\n  }\n};","map":{"version":3,"sources":["/Users/onesmusnyakotyo/earnedit/frontend/src/actions/orderActions.js"],"names":["ORDER_SAVE_SEND_COUNTRY","ORDER_AMOUNT","axios","saveSendCountry","value","dispatch","getState","type","userLogin","userInfo","config","headers","Authorization","token","data","put","payload","localStorage","setItem","JSON","stringify","error","message","response","logout","saveSendAmount"],"mappings":"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","sourcesContent":["import { ORDER_SAVE_SEND_COUNTRY, ORDER_AMOUNT } from '../constants/orderConstants'\nimport axios from 'axios'\n\n\n// export const saveSendCountry = (value) => (dispatch) => {\n//     console.log('Back', value)\n   \n//   dispatch({\n//     type: ORDER_SAVE_SEND_COUNTRY,\n//     payload: value\n//   })\n\n//   localStorage.setItem('sendCountry', JSON.stringify(value))\n// }\n\nexport const saveSendCountry  = (value) => async (\n  dispatch,\n  getState\n) => {\n  try {\n    dispatch({\n      type: ORDER_SAVE_SEND_COUNTRY,\n    })\n\n    const {\n      userLogin: { userInfo },\n    } = getState()\n\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    }\n\n    const { data } = await axios.put(\n      '/api/orders',\n      value,\n      config\n    )\n\n    dispatch({\n      type: ORDER_SAVE_SEND_COUNTRY,\n      payload: data,\n    })\n\n    localStorage.setItem('sendCountry', JSON.stringify(data))\n\n  } catch (error) {\n    const message =\n      error.response && error.response.data.message\n        ? error.response.data.message\n        : error.message\n    if (message === 'Not authorized, token failed') {\n      dispatch(logout())\n    }\n    // dispatch({\n    //   type: ORDER_PAY_FAIL,\n    //   payload: message,\n    // })\n  }\n}\n\n\n// export const saveSendAmount = (value, getState) => (dispatch) =>  {\n//     console.log('Back Amount', value)\n\n//     const {\n//       userLogin: { userInfo },\n//     } = getState()\n\n//     const config = {\n//       headers: {\n//         'Content-Type': 'application/json',\n//         Authorization: `Bearer ${userInfo.token}`,\n//       },\n//     }\n\n//       const { data } = await axios.put(\n//       `/api/orders`,\n//       value,\n//       config\n//     )\n   \n//   dispatch({\n//     type: ORDER_AMOUNT,\n//     payload: data\n//   })\n\n//   localStorage.setItem('sendAmount', JSON.stringify(data))\n// }\n\nexport const saveSendAmount = (value) => async (\n  dispatch,\n  getState\n) => {\n  try {\n    dispatch({\n      type: ORDER_AMOUNT,\n    })\n\n    const {\n      userLogin: { userInfo },\n    } = getState()\n\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    }\n\n    const { data } = await axios.put(\n      '/api/orders',\n      value,\n      config\n    )\n\n    dispatch({\n      type: ORDER_AMOUNT,\n      payload: data,\n    })\n\n    localStorage.setItem('sendAmount', JSON.stringify(data))\n\n  } catch (error) {\n    const message =\n      error.response && error.response.data.message\n        ? error.response.data.message\n        : error.message\n    if (message === 'Not authorized, token failed') {\n      dispatch(logout())\n    }\n    // dispatch({\n    //   type: ORDER_PAY_FAIL,\n    //   payload: message,\n    // })\n  }\n}"]},"metadata":{},"sourceType":"module"}